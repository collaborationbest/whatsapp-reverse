.class public LX/AeW;
.super Ljava/lang/Object;
.source ""

# interfaces
.implements Ljava/io/Serializable;


# static fields
.field public static final A00:Lcom/facebook/video/heroplayer/setting/FbAutogeneratedSettings;

.field public static final A01:LX/AeW;

.field public static final serialVersionUID:J = -0xb6b8c66d093f82bL


# instance fields
.field public final abrMonitorEnabled:Z

.field public final abrSetting:LX/BXb;

.field public final adBreakEnahncedPrefetchDurationMs:I

.field public final adjustSpeedBottomThresholdMs:I

.field public final adjustSpeedTopThresholdMs:I

.field public final advanceSegmentOnNetworkErrors:J

.field public final aggressiveEdgeLatencyForLsbConfPercentile:I

.field public final aggressiveEdgeLatencyOverrideForLSB:J

.field public final allowImmediateLiveBufferTrim:Z

.field public final allowMultiPlayerFormatWarmup:Z

.field public final allowOutOfBoundsAccessForPDash:Z

.field public final allowOverridingPlayerWarmUpWatermark:Z

.field public final allowPredictiveAlignment:Z

.field public final allowRequestForSoftwareDecoder:Z

.field public final allowedExtendedMinRebuffePeriodMs:I

.field public final allowedExtendedPremiumTierRebufferPeriodMs:I

.field public final allowedExtendedRebufferPeriodMs:I

.field public final alwaysPerformContentLengthUpdateFirst:Z

.field public final alwaysPrefetchInBgDefaultPriorityThread:Z

.field public final alwaysPrefetchInIdleExecutor:Z

.field public final alwaysReuseManifestFetcher:Z

.field public final appendReconfigurationDataForDrmContentFix:Z

.field public final asyncReleaseSurfaceOnMainThread:Z

.field public final attachGrootPlayerListenerWhenUsingSurfaceControl:Z

.field public final audioBufferSize:I

.field public final audioLazyLoadSetting:LX/AeE;

.field public final audioStallCountThresholdMs:I

.field public final audioTrackInitFailedFallbackApplyThreshold:I

.field public final audioVideoSyncPeriodMs:I

.field public final autogenSettings:Lcom/facebook/video/heroplayer/setting/FbAutogeneratedSettings;

.field public final av1Dav1dEnableVpsLogging:Z

.field public final av1Dav1dUseSurfaceViewSetFix:Z

.field public final av1FlushDav1dProperly:Z

.field public final av1SetBuffersDataspace:Z

.field public final av1ThrowExceptionOnNonDav1dDecoder:Z

.field public final av1ThrowExceptionOnPictureError:Z

.field public final av1UseDav1dSynchronizationFixes:Z

.field public final av1UseMemoryCleanupFixes:Z

.field public final avoidSecondPhaseOnCell:Z

.field public final avoidServiceClassLoadOnClient:Z

.field public final bandwidthMultiplierForAggressiveEdgeLatency:F

.field public final bandwidthMultiplierToSkipPrefetchedContent:F

.field public final bgHeroServiceStatusUpdate:Z

.field public final blackscreenDetectOnce:Z

.field public final blackscreenNoSampleThresholdMs:J

.field public final blackscreenSampleIntervalMs:J

.field public final blockDRMPlaybackOnHDMI:Z

.field public final blockDRMScreenCapture:Z

.field public final blockListedHardwareDecoderMap:Ljava/util/HashMap;

.field public final broadcasterIdAllowlist:Ljava/lang/String;

.field public final bufferDecreaseTimeMs:I

.field public final bufferedCacheDataSinkSize:I

.field public final bufferedDurationBasedHttpPriorityLowerBoundMs:I

.field public final bufferedDurationBasedHttpPriorityUpperBoundMs:I

.field public final bypassGreaterThanMinRebufferWhenBeforePlay:Z

.field public final cache:LX/AeI;

.field public final callbackFirstCaughtStreamError:Z

.field public final cancelOngoingRequest:Z

.field public final cellMaxWatermarkMsConfig:LX/AeG;

.field public final changePriorityForPrefetchRequestOnPlayerStart:Z

.field public final changeThreadPriorityForPrefetch:Z

.field public final checkCachedLockedCacheSpan:Z

.field public final checkLiveSourceUri:Z

.field public final checkManifestRepresentationFormatMismatch:Z

.field public final checkPlayerStateIntervalIncreaseMs:I

.field public final checkPlayerStateMaxIntervalMs:I

.field public final checkPlayerStateMinIntervalMs:I

.field public final checkReadToEndBeforeUpdatingFinalState:Z

.field public final checkThumbnailCache:Z

.field public final chunkSourceRetryMaximum:I

.field public final cleanUpHeartbeatMessagesIfNotPlaying:Z

.field public final cleanUpHeartbeatMessagesOnPause:Z

.field public final cleanUpHeartbeatMessagesOnStall:Z

.field public final clearBufferingWhenInWarmup:Z

.field public final combineInitFirstSegment:Z

.field public final concatenatedMsPerLoadConfig:LX/AeG;

.field public final continueLoadingOnSeekbarExo2:Z

.field public final continuouslyLoadFromPreSeekLocation:Z

.field public final customizedPrefetchThreadPriority:I

.field public final customizedWABufferForPlaybackMs:I

.field public final customizedWAIndividualAllocationSize:I

.field public final customizedWARebufferMs:I

.field public final dashHighWatermarkMs:I

.field public final dashLowWatermarkMs:I

.field public final dashManifestPoolSize:I

.field public final dav1dApplyGrain:Z

.field public final dav1dMaxFrameDelay:I

.field public final dav1dThreads:I

.field public final decoderDequeueRetryTimeMs:I

.field public final decoderInitializationRetryTimeMs:I

.field public final defaultUserAgent:Ljava/lang/String;

.field public final delayWarmupRunningMs:I

.field public final depthTocheckSurfaceInvisibleParent:I

.field public final desiredBufferAcceptableErrorMs:I

.field public final disableAudioFocusInGroot:Z

.field public final disableAudioRendererOnAudioTrackInitFailed:Z

.field public final disableCapBufferSizeLocalProgressive:Z

.field public final disableIsCachedApi:Z

.field public final disableLatencyManagerOnStaticManifest:Z

.field public final disableLiveCaptioningOnPlayerInit:Z

.field public final disableLoadingRetryOnFatalError:Z

.field public final disableNetworkErrorCountInChunkSource:Z

.field public final disablePoolingForDav1dMediaCodec:Z

.field public final disablePreallocateCodecDuringStartup:Z

.field public final disableRecoverInBackground:Z

.field public final disableSecondPhasePrefetchForDataSaver:Z

.field public final disableSecondPhasePrefetchForReels:Z

.field public final disableSecondPhasePrefetchOnAppScrolling:Z

.field public final disableSkipInlineForHuddle:Z

.field public final disableSpeedAdjustmentOnBadUserExperience:Z

.field public final disableStoriesCustomizedUnstallBuffer:Z

.field public final disableTextEraLoggingOnLoadRetry:Z

.field public final disableTextRendererOn404InitSegmentLoadError:Z

.field public final disableTextRendererOn404LoadError:Z

.field public final disableTextRendererOn500InitSegmentLoadError:Z

.field public final disableTextRendererOn500LoadError:Z

.field public final disableTextTrackOnMissingTextTrack:Z

.field public final disableTigonBandwidthLogging:Z

.field public final disableUllBasedOnHoldout:Z

.field public final disableVideoTrackForInVisibleVDD:Z

.field public final dontRetry403OnExpiredUrl:Z

.field public final drmSessionStoreCapacity:I

.field public final dummyDefaultSetting:Z

.field public final dynamicDiscontinuityInitialPosMs:I

.field public final dynamicInfoSetting:LX/AeJ;

.field public final earlyPreallocateCodecOnAppNotScrolling:Z

.field public final earlyPreallocateCodecOnIdle:Z

.field public final enable204SegmentRemapping:Z

.field public final enable404SegmentRemapping:Z

.field public final enable416Logging:Z

.field public final enable500R1FallbackLogging:Z

.field public final enableAV1SRShader:Z

.field public final enableActiveDrmSessionStoreRelease:Z

.field public final enableAdBreakEnhancedPrefetch:Z

.field public final enableAdditionalDecoderInitFailureMessage:Z

.field public final enableAllLongerPrefetchAds:Z

.field public final enableAlwaysCallPreallocateCodec:Z

.field public final enableAsynchronousBufferQueueing:Z

.field public final enableAudioTrackRetry:Z

.field public final enableAv1Dav1d:Z

.field public final enableAv1LibGav1:Z

.field public final enableAvc1ColorConfigParseFix:Z

.field public final enableBackgroundServicePlayerReuse:Z

.field public final enableBackwardJumpSeekKeyframeSync:Z

.field public final enableBitrateAwareAudioPrefetch:Z

.field public final enableBlackscreenDetector:Z

.field public final enableBlockListingResource:Z

.field public final enableBoostOngoingPrefetchPriorityPlay:Z

.field public final enableBoostOngoingPrefetchPriorityPrepare:Z

.field public final enableBufferAwareJumpSeek:Z

.field public enableBusySignalToFramework:Z

.field public final enableCDNDebugHeaders:Z

.field public final enableCacheBlockWithoutTimeout:Z

.field public final enableCacheLookUp:Z

.field public final enableCacheNetworkTypeIfNotSet:Z

.field public final enableCachedBandwidthEstimate:Z

.field public final enableCancelFollowupPrefetch:Z

.field public final enableCancelOngoingPrefetchPause:Z

.field public final enableCancelOngoingRequestPause:Z

.field public final enableCancelPrefetchInQueuePrepare:Z

.field public final enableCaseInsensitiveHttpResponseHeaderKey:Z

.field public final enableCheckAudioError:Z

.field public final enableClearStallOnBroadcastEnd:Z

.field public final enableClockSync:Z

.field public final enableCodecDeadlockFix:Z

.field public final enableCodecHistoryOverlayField:Z

.field public final enableCodecPreallocation:Z

.field public final enableContinueLoadingLoggingForManifest:Z

.field public final enableContinueLoadingLoggingForMedia:Z

.field public final enableCreateByteBufferFromABufferNullCheckHooks:Z

.field public final enableCustomizedDRCEffect:Z

.field public final enableCustomizedDRCForHeadset:Z

.field public final enableCustomizedPrefetchThreadPriority:Z

.field public final enableCustomizedXHEAACConfig:Z

.field public final enableDashManifestPool:Z

.field public final enableDav1dAsMediaCodecAdapter:Z

.field public final enableDav1dOpenGLIncorrectSurfaceSizeFix:Z

.field public final enableDav1dOpenGLRendering:Z

.field public final enableDav1dOpenGLRenderingHandleAspectRatio:Z

.field public final enableDebugLogs:Z

.field public final enableDeduplicateImfEmsgAtPlayer:Z

.field public final enableDelayWarmupRunning:Z

.field public final enableDemoteOngoingPrefetchPriorityPause:Z

.field public final enableDrmProvisioningRetry:Z

.field public final enableDrmSessionStore:Z

.field public final enableDynamicCursorDistance:Z

.field public final enableDynamicDiscontinuityDistance:Z

.field public final enableDynamicMinRebufferMsController:Z

.field public enableDynamicPrefetchCacheFileSize:Z

.field public enableDynamicPrefetchCacheFileSizePrefetchOnly:Z

.field public final enableE2ECDNTracing:Z

.field public final enableEmsgPtsAlignment:Z

.field public final enableEmsgTrackForAll:Z

.field public final enableEnsureBindService:Z

.field public final enableEvictCacheOnExoplayerErrors:Z

.field public final enableEvictPlayerOnAudioTrackInitFailed:Z

.field public final enableExcessiveNumUriRedirectLogging:Z

.field public final enableExplicitTextDataSourceCreation:Z

.field public final enableFBLiteHttpDataSource:Z

.field public final enableFallbackToMainProcess:Z

.field public final enableFillBufferHooks:Z

.field public final enableFillFreeBufferCheckNodeHooks:Z

.field public final enableFirstWarmUpRequestOnScreen:Z

.field public final enableFixForOnPreparingCallback:Z

.field public final enableFixRemovePlayerViewFromParent:Z

.field public final enableFixTrackIndexOOB:Z

.field public final enableFrameBasedLogging:Z

.field public final enableFreeNodeHooks:Z

.field public final enableGlobalNetworkMonitor:Z

.field public final enableGlobalStallMonitor:Z

.field public final enableGrootAlwaysSendPlayStarted:Z

.field public final enableHeroPlayerMaxLoopCount:Z

.field public final enableHttpPriorityForPrefetch:Z

.field public final enableHttpPriorityForStreaming:Z

.field public final enableHybridCacheForPrefetch:Z

.field public final enableIgHttpDataSource:Z

.field public final enableInstreamAdsEmsgLog:Z

.field public final enableIsTextAdaptationSetNotFoundLogging:Z

.field public final enableJumpTrackFallingBehind:Z

.field public final enableKillProcessBeforeRebind:Z

.field public final enableKillVideoProcessForAudioTrackInitFailed:Z

.field public final enableKillVideoProcessForIllegalStateException:Z

.field public final enableLastPlaybackSpeedCacheUpdate:Z

.field public final enableLatencyManagerRateLimiting:Z

.field public final enableLatencyPlaybackSpeed:Z

.field public final enableLazyAudioLoadForProgressive:Z

.field public final enableLiveBWEstimation:Z

.field public final enableLiveBroadcastErrorUI:Z

.field public final enableLiveBufferMeter:Z

.field public final enableLiveJumpByTrimBuffer:Z

.field public final enableLiveLatencyManager:Z

.field public final enableLiveOneTimeLoadingJump:Z

.field public final enableLiveTierSpecificBufferSetting:Z

.field public final enableLiveTierSpecificRebuffer:Z

.field public final enableLoadErrorHandlingPolicy:Z

.field public final enableLoaderRetryLoggingForManifest:Z

.field public final enableLoaderRetryLoggingForMedia:Z

.field public final enableLocalSocketProxy:Z

.field public final enableLogExceptionMessageOnError:Z

.field public final enableLogSemiCachedEvents:Z

.field public final enableLoggingEmptyOrNullVideoId:Z

.field public final enableLongCacheKeyForContentLength:Z

.field public final enableLowLatencyDecoding:Z

.field public final enableLowLatencyDecodingOverrideSDKGating:Z

.field public final enableMP3Extractor:Z

.field public final enableMediaCodecPoolingForLiveAudio:Z

.field public final enableMediaCodecPoolingForLiveVideo:Z

.field public final enableMediaCodecPoolingForProgressiveAudio:Z

.field public final enableMediaCodecPoolingForProgressiveVideo:Z

.field public final enableMediaCodecPoolingForVodAudio:Z

.field public final enableMediaCodecPoolingForVodVideo:Z

.field public final enableMediaCodecReuseOptimizeLock:Z

.field public final enableMediaCodecReuseOptimizeRelease:Z

.field public final enableMediaSessionControls:Z

.field public final enableMemoryAwareBufferSizeUsingRed:Z

.field public final enableMemoryAwareBufferSizeUsingYellow:Z

.field public final enableMixeCodecManifestLogging:Z

.field public final enableMixeCodecManifestVideoCodecSwitchedLogging:Z

.field public final enableMixedCodecManifestSupport:Z

.field public final enableMp3Mp4ExtractorLogic:Z

.field public final enableMp4MultiTrafBoxesFix:Z

.field public final enableMpdFilteringUtils:Z

.field public final enableNeedCenteringIndependentlyGroot:Z

.field public final enableOffloadInitHeroService:Z

.field public final enableOffloadingIPC:Z

.field public final enableOnMessageReceivedHooks:Z

.field public final enableOnOMXEmptyBufferDoneHooks:Z

.field public final enableOneSemanticsLoaderRetry:Z

.field public final enableOpenGLSurfaceSizeUpdateFix:Z

.field public final enableOverrideBufferWatermark:Z

.field public final enableOverrideEndPosition:Z

.field public final enablePCMBufferListener:Z

.field public final enablePIDForHuddle:Z

.field public final enablePauseNow:Z

.field public final enablePlayerActionStateLoggingInFlytrap:Z

.field public final enablePreSeekToApi:Z

.field public final enablePredictedUrlTracing:Z

.field public final enablePrefetchCancelCallback:Z

.field public final enableProgressiveFallbackWhenNoRepresentations:Z

.field public final enableProgressivePrefetchWhenNoRepresentations:Z

.field public final enableQuickDashPlayback:Z

.field public final enableRebootDeviceErrorUIForAudioTrackInitFailed:Z

.field public final enableRebootDeviceErrorUIForCodecInitFailed:Z

.field public final enableRebootDeviceErrorUIForIllegalStateException:Z

.field public final enableReduceRetryBeforePlay:Z

.field public final enableRequestAnalyticsTagsHeaderLogging:Z

.field public final enableRequestEtdHeader:Z

.field public final enableRetryErrorLoggingInCancel:Z

.field public final enableRetryOnConnection:Z

.field public final enableRetryWarmup:Z

.field public final enableSaturation:Z

.field public final enableSeamlessAudioCodecAdaptation:Z

.field public final enableSecondPhaseAlignment:Z

.field public final enableSecondPhasePrefetch:Z

.field public final enableSecondPhasePrefetchWebm:Z

.field public final enableSecondaryChannelLoggingForLite:Z

.field public final enableSegmentIndexCheckForPrefetchBytes:Z

.field public final enableSendCommandHooks:Z

.field public final enableServerSideAbr:Z

.field public final enableServerSideForwardBwe:Z

.field public final enableServerSideForwardTracing:Z

.field public final enableSpatialOpusRendererExo2:Z

.field public final enableSsBweHeaderForLive:Z

.field public final enableStopWarmupSchedulerEmpty:Z

.field public final enableStreamLatencyToggleOverride:Z

.field public final enableSuspensionAfterBroadcasterStall:Z

.field public final enableSynchronizeCodecInteractionsWithQueueing:Z

.field public final enableSystrace:Z

.field public final enableTextTrackWithKnownLanguage:Z

.field public final enableTransferListenerCallbackPerfFix:Z

.field public final enableUnexpectedExoExceptionLogging:Z

.field public final enableUnifiedGrootErrorHandling:Z

.field public final enableUpdateProgressiveContentLengthFromCache:Z

.field public final enableUsingASRCaptions:Z

.field public final enableVideoDebugEventLogging:Z

.field public final enableVideoHybridCache:Z

.field public final enableVideoMemoryCache:Z

.field public final enableVideoPlayerServerSideBweAnnotations:Z

.field public final enableVideoPositionLoggingInCompleteEvent:Z

.field public final enableVodContentLengthLogging:Z

.field public final enableVodDrmPrefetch:Z

.field public final enableVodPausedLoading:Z

.field public final enableVp9CodecPreallocation:Z

.field public final enableVrlQplLoggingEvents:Z

.field public final enableWarmCodec:Z

.field public final enableWarmUpRequestOffscreen:Z

.field public final enableWarmupProcessPeriodically:Z

.field public final enableWarmupScheduler:Z

.field public final enableWarmupSchedulerRightAway:Z

.field public final enableWarmupSkipScheduler:Z

.field public final enableWifiLockManager:Z

.field public final enableWifiLongerPrefetchAds:Z

.field public final enabledViewManagementInGroot:Z

.field public final enforceSizeLimitOnSecondPhasePrefetch:Z

.field public final enhanceParseException:Z

.field public final errorRecoveryAttemptRepeatCountFlushThreshold:I

.field public final exceedRendererCapabilitiesIfAllFilteredOut:Z

.field public final excessiveUriRedirectLoggingLimit:I

.field public final exo2ReuseManifestAfterInitialParse:Z

.field public final exo2Vp9UseSurfaceRenderer:Z

.field public final exoPlayerUpgrade218verifyApplicationThread:Z

.field public final expBackOffSpeedUp:F

.field public final expBackoffInRetryBaseDelay:I

.field public final extendedApiTierLiveRebufferThresholdMs:I

.field public final extendedLiveRebufferThresholdMs:I

.field public final extendedMinRebufferThresholdMs:I

.field public final extendedPremiumTierLiveRebufferThresholdMs:I

.field public final fallbackToFirstSegment:Z

.field public final fbstoriesMinBufferMsConfig:LX/AeG;

.field public final fbstoriesMinRebufferMsConfig:LX/AeG;

.field public final fetchCacheSourceHttpConnectTimeoutMsConfig:LX/AeG;

.field public final fetchHttpReadTimeoutMsConfig:LX/AeG;

.field public final fixBlackscreenByRecreatingSurface:Z

.field public final fixDRMPlaybackOnHDMI:Z

.field public final fixNullCacheSpan:Z

.field public final fixPeriodTransitionWithNonZeroStartPosition:Z

.field public final fixSurfaceInvisibleParent:Z

.field public final fixXmlParserError:Z

.field public final forceAdjustSurfaceOnMainThread:Z

.field public final forceDisableULL:Z

.field public final forceMainThreadHandlerForHeroSurface:Z

.field public final forceManifestFilteringMode:I

.field public final forceMinWatermarkGreaterThanMinRebuffer:Z

.field public final forceOneSemanticsHandling:Z

.field public final forceOneSemanticsWaveHandling:I

.field public final forceSeekRushPlayback:Z

.field public final forceStereoToMonoConversion:Z

.field public final fragmentedMp4ExtractorVersion:I

.field public final frequentApiTierBroadcasterStallIntervalThresholdMs:I

.field public final frequentBroadcasterStallIntervalThresholdMs:I

.field public final frequentPremiumTierBroadcasterStallIntervalThresholdMs:I

.field public final frequentStallIntervalThresholdMs:I

.field public final fullscreenPredictionRequestTimeoutMs:J

.field public final getMinLoadPositionStartOfPlayback:Z

.field public final getPlaybackPrefFromPrefetchRequest:Z

.field public final globalStallCountsToUpdateDynamicRebuffer:I

.field public final globalStallCountsToUpdateLiveDynamicRebuffer:I

.field public final goodVsrScoreThreshold:I

.field public final handleReleasedReusedSurfaceTexture:Z

.field public final handlerThreadPoolSize:I

.field public final highJumpDistanceMs:I

.field public final huddleLatencyMaxSpeedDelta:F

.field public final ignore404AfterStreamEnd:Z

.field public final ignoreEmptyProfileLevels:Z

.field public final ignoreLiveStreamErrorsTimeoutMs:J

.field public final ignoreStreamErrorsTimeoutMs:J

.field public final ignoreTemplatedMinLoadPosition:Z

.field public final improveLooping:Z

.field public final includeAllBufferingEvents:Z

.field public final includeLiveTraceHeader:Z

.field public final includePlaybackSessionIdHeader:Z

.field public final initChunkCacheSize:I

.field public final initialBufferTrimPeriodMs:I

.field public final initialBufferTrimTargetMs:I

.field public final initialBufferTrimThresholdMs:I

.field public final intentBasedBufferingConfig:LX/AeM;

.field public final isAbrTracingEnabled:Z

.field public final isAudioDataSummaryEnabled:Z

.field public final isDefaultMC:Z

.field public final isEarlyPreallocateCodec:Z

.field public final isExo2AggresiveMicrostallFixEnabled:Z

.field public final isExo2DrmEnabled:Z

.field public final isExo2MediaCodecReuseEnabled:Z

.field public final isExo2UseAbsolutePosition:Z

.field public final isExo2Vp9Enabled:Z

.field public final isLiveTraceEnabled:Z

.field public final isMeDevice:Z

.field public final isSetSerializableBlacklisted:Z

.field public final isTATracingEnabled:Z

.field public final isVideoQplPipelineEnabled:Z

.field public final jumpSeekPosLeftoverBufferDurationMs:I

.field public final jumpSeekReductionFactorPct:I

.field public final killVideoProcessOnExoPlaybackExceptionMaximumRetryCount:I

.field public final killVideoProcessOnExoPlaybackExceptionRetryTimeMs:J

.field public final killVideoProcessWhenMainProcessDead:Z

.field public final largeBandwidthCursorMs:I

.field public final largeBandwidthToleranceMs:I

.field public final largeJumpBandwidthMultiplier:F

.field public final lateNightHourLowerThreshold:I

.field public final lateNightHourUpperThreshold:I

.field public final latencyBoundMsConfig:LX/AeG;

.field public final latencyControllerBypassLimits:Z

.field public final liveAPIMinBufferMsConfig:LX/AeG;

.field public final liveAPIMinRebufferMsConfig:LX/AeG;

.field public final liveBufferDurationFluctuationTolerancePercent:I

.field public final liveBufferMeterTrimByMinBuffer:Z

.field public final liveDashEdgeLatencyMs:I

.field public final liveDashHighWatermarkMs:I

.field public final liveDashLowWatermarkMs:I

.field public final liveEnableStreamingCache:Z

.field public final liveLatencyManagerPlayerFormat:Ljava/lang/String;

.field public final liveLatencySettings:Ljava/util/Map;

.field public final liveMinBufferMsConfig:LX/AeG;

.field public final liveMinRebufferMsConfig:LX/AeG;

.field public final liveMinRetryCounts:I

.field public final livePremiumMinBufferMsConfig:LX/AeG;

.field public final livePremiumMinRebufferMsConfig:LX/AeG;

.field public final livePrioritizeTimeOverSizeThresholds:Z

.field public final liveTrimByBufferMeterMinDeltaMs:I

.field public final liveUseLowPriRequests:Z

.field public final localSocketProxyAddress:Ljava/lang/String;

.field public final logLatencyEvents:Z

.field public final logOnApacheFallback:Z

.field public final logPausedSeekPositionBeforeSettingState:Z

.field public final logStallOnPauseOnError:Z

.field public final loggerSDKConfig:LX/AeH;

.field public final lowJumpDistanceMs:I

.field public final mEventLogSetting:LX/AeA;

.field public final mLowLatencySetting:LX/AeB;

.field public final manifestErrorReportingExo2:Z

.field public final manifestMisalignmentReportingExo2:Z

.field public maxAllowed503RetryCount:I

.field public final maxBufferDurationPausedLiveUs:J

.field public final maxBufferToDownloadInPausedLoadingMs:I

.field public final maxBytesToPrefetchCellVOD:I

.field public final maxBytesToPrefetchVOD:I

.field public final maxCustomizedWABufferMs:I

.field public final maxDistanceBetweenTracksMs:I

.field public final maxDurationUsForFullSegmentPrefetch:J

.field public final maxMediaCodecInstancesPerCodecName:I

.field public final maxMediaCodecInstancesTotal:I

.field public final maxNumGapsToNotify:I

.field public final maxNumRedirects:I

.field public final maxPastOtherTrackDistanceMs:I

.field public final maxPredictedSegmentsToRemap:I

.field public final maxRetryCountByEvictCacheOnExoplayerErrors:I

.field public final maxRetryCountByEvictPlayerOnAudioTrackInitFailed:I

.field public final maxSegmentsToAdvance:J

.field public final maxSegmentsToPredict:I

.field public final maxStaleManifestCountForDiscontinuityJumps:I

.field public final maxTimeAllowedSpentInPausedLoadingMs:I

.field public final maxTimeMsSinceRefreshPDash:I

.field public final maxTimeToSkipInlineManifestMs:I

.field public final maxTrackJumpsAllowed:I

.field public final maxWidthForAV1SRShader:I

.field public final maxWifiBytesToPrefetchAds:I

.field public final maxWifiPrefetchDurationMsAds:I

.field public final maybeSkipInlineManifestForLSB:Z

.field public final mcDebugState:Ljava/lang/String;

.field public final mcValueSource:Ljava/lang/String;

.field public final microStallThresholdMsToUseMinBuffer:I

.field public final minBufferForPreSeekMs:J

.field public final minBufferMsConfig:LX/AeG;

.field public final minBufferedDurationMsToCancel:I

.field public minCacheFileSizeForDynamicChunkingInBytes:J

.field public final minCustomizedWABufferMs:I

.field public final minDelayToRefreshTigonBitrateMs:J

.field public final minLiveStartPositionMs:I

.field public final minMicroRebufferMsConfig:LX/AeG;

.field public final minNumManifestForOutOfBoundsPDash:I

.field public final minRebufferMsConfig:LX/AeG;

.field public final minRetryCountBeforePlay:I

.field public final minScoreThresholdForLL:I

.field public final minTimeBetweenDynamicCursorChangesMs:I

.field public final minTimeBetweenStallToIgnoreDiscontJumpS:I

.field public final minTimeToSkipInlineManifestMs:I

.field public final minimumLogLevel:I

.field public final minimumTimeBetweenSpeedChangesS:I

.field public final minimumTimeBetweenStallsS:I

.field public final needUpdatePlayerStateThresholdMs:I

.field public final needUpdateStateByPositionOffsetThresholdMs:I

.field public final networkAwareDisableSecondPhasePrefetch:LX/AeG;

.field public final networkAwareHttpPriorityIncrementalForStreaming:LX/AeG;

.field public final networkAwarePrefetchTaskQueueWorkerNum:LX/AeG;

.field public final newDownstreamFormatChange:Z

.field public final numDashChunkMemoryCacheSampleStreams:I

.field public final numMsToPrefetch:I

.field public final numOfBytesBeforeLoaderThreadSleep:I

.field public final numSegmentsToSecondPhasePrefetch:I

.field public final numSegmentsToSecondPhasePrefetchAudio:I

.field public final numSegmentsToSecondPhasePrefetchXHEAACAudio:I

.field public final offloadGrootAudioFocus:Z

.field public final oneSemanticsOsParamValue:Ljava/lang/String;

.field public final originAllowlistForAlternateCodec:Ljava/util/Set;

.field public final parseAndAttachETagManifest:Z

.field public final parseManifestIdentifier:Z

.field public final pausePlayingVideoWhenRelease:Z

.field public final pausedLoadingTriggerTypes:Ljava/util/Set;

.field public final pidMultiplierFloor:F

.field public final pidParameterExpBackOff:F

.field public final pidParameterMultiplierInitial:F

.field public final playbackAboutToFinishCallbackTriggeringRemainingDuration:I

.field public final playerOriginPausedLoadingBlackList:Ljava/lang/String;

.field public final playerPoolSize:I

.field public final playerRespawnExo2:Z

.field public final playerWarmUpPoolSize:I

.field public final playerWarmUpWatermarkMs:I

.field public final playerWatermarkBeforePlayedMs:I

.field public final postStoriesGrootPrefetchToHeroManagerThread:Z

.field public final predictedHuddleDashManifestReadTimeoutMs:I

.field public final predictedLiveDashManifestReadTimeoutMs:I

.field public final predictionMaxSegmentDurationMs:I

.field public final predictiveDashReadTimeoutMs:I

.field public final predictiveDashSetting:LX/AeV;

.field public final prefetchAudioFirst:Z

.field public final prefetchAudioFirstForStoriesAds:Z

.field public final prefetchBypassFilter:Z

.field public final prefetchSubOriginBlockList:Ljava/lang/String;

.field public final prefetchTagBlockList:Ljava/lang/String;

.field public final prefetchTaskQueuePutInFront:Z

.field public final prefetchTaskQueueRetryNumber:I

.field public final prefetchTaskQueueSize:I

.field public final prefetchTaskQueueWorkerNum:I

.field public final prefetchThreadUpdatedPriority:I

.field public final prefetchUrgentTaskQueueWorkerNum:I

.field public final preventAdjustWhenSurfaceNotValid:Z

.field public final preventJumpStaticManifest:Z

.field public final preventPreallocateIfNotEmpty:Z

.field public final preventTextRendererDelay:Z

.field public final preventWarmupInvalidSource:Z

.field public final prioritizeAv1Dav1dOverLibgav1:Z

.field public final prioritizeAv1HardwareDecoder:Z

.field public final prioritizeTimeOverSizeThresholds:Z

.field public final progressivePrefetchBytesCell:I

.field public final progressivePrefetchBytesWifi:I

.field public final proxyDrmProvisioningRequests:Z

.field public final qualityMapperBoundMsConfig:LX/AeG;

.field public final quitHandlerSafely:Z

.field public final redMemoryBufferSizeMultiplier:D

.field public final reduceMemoryDataSinkMemorySpike:Z

.field public final refreshManifestAfterInit:Z

.field public final refreshManifestOnPredictionRestriction:Z

.field public final releaseGrootSurfaceSync:Z

.field public final releaseHeroManagerWhenLowMemInBg:Z

.field public final releaseSurfaceBlockTimeoutMS:I

.field public final releaseSurfaceInServicePlayerReset:Z

.field public final releaseThreadInterval:I

.field public final removeGifPrefixForDRMKeyRequest:Z

.field public final renderRetryTimeMs:I

.field public final rendererAllowedJoiningTimeMs:J

.field public final reorderSeekPrepare:Z

.field public final reportExceptionAsMME:Z

.field public final reportExceptionsAsSoftErrors:Z

.field public final reportLastVideoInCrash:Z

.field public final reportPrefetchAbrDecision:Z

.field public final reportStallThresholdMs:I

.field public final reportStallThresholdMsLatencyManager:I

.field public final reportUnexpectedStopLoading:Z

.field public final resizeAndRepositionGrootSurfaceControl:Z

.field public final respectAbrForUll:Z

.field public final respectAbrIndexForUll:Z

.field public final respectDroppedQualityFlag:Z

.field public final respectDynamicPlayerSettings:Z

.field public final restartServiceThresholdMs:I

.field public final retryCountsForStartPlayManifest503:I

.field public final retryCountsForStartPlayManifestFetch:I

.field public final returnRequestedSeekTimeTimeoutMs:I

.field public final saturationFactor:F

.field public final scalingBufferErrorMs:I

.field public final sdKVersionToUseCustomizedBuffering:I

.field public final sdKVersionToUseTargetBufferOverwrite:I

.field public final sdkVersionToBypassHeroStateRefresh:I

.field public final sdkVersionToUseConservativeLoadControl:I

.field public final sdkVersionToUseDefaultLoadControl:I

.field public final secondPhasePrefetchQueueMaxSize:I

.field public final secondaryChannelLoggingMaxDisplayedFramesStringSize:I

.field public final secondaryChannelLoggingMaxNumOfFramesInOneJson:I

.field public final secondaryChannelLoggingSamplingFactor:I

.field public final seekParameterOptionIndex:I

.field public final segDurationMultiplier:I

.field public final serviceInjectorClassName:Ljava/lang/String;

.field public final setPlayWhenReadyOnError:Z

.field public final setPlayWhenReadyOnRetry:Z

.field public final shareBWEEstimateAcrossVideos:Z

.field public final shouldAddDefaultMP4Extractor:Z

.field public final shouldAlwaysDo503Retry:Z

.field public final shouldCleanupHeroManagerThread:Z

.field public final shouldDisableAV1VideoTrackOnlyforVDD:Z

.field public final shouldExcludeAbsolutePositionForClippingMediaSource:Z

.field public final shouldLoadBinaryDataFromManifest:Z

.field public final shouldLogInbandTelemetryBweDebugString:Z

.field public final shouldPrefetchSecondSegmentOffset:Z

.field public final shouldUseWarmupSlot:Z

.field public final shouldWarmupAwareOfAppScrolling:Z

.field public final showDebugStats:Z

.field public final skipAV1PreviousKeyFrameSeek:Z

.field public final skipAudioMediaCodecStopOnRelease:Z

.field public final skipAudioPrefetch:Z

.field public final skipDebugLogs:Z

.field public final skipEvaluateIflastChunkWasInitialization:Z

.field public final skipInlineManifestForLsbConfPercentile:I

.field public final skipInvalidSamples:Z

.field public final skipMediaCodecStopOnRelease:Z

.field public final skipPrefetchInCacheManager:Z

.field public final skipReleaseSurfaceBlock:Z

.field public final skipSurfaceViewReparentOnSetCurrentView:Z

.field public final skipSurfaceViewTransactionOnSameSurface:Z

.field public final skipSynchronizedUpdatePriority:Z

.field public final skipThumbnailCacheKey:Z

.field public final smallBandwidthCursorMs:I

.field public final smallBandwidthToleranceMs:I

.field public final smallJumpBandwidthMultiplier:F

.field public final smartGcEnabled:Z

.field public final smartGcTimeout:I

.field public final softErrorErrorCodeBlacklist:Ljava/util/Set;

.field public final softErrorErrorDomainBlacklist:Ljava/util/Set;

.field public final softErrorErrorMessageBlacklist:Ljava/util/Set;

.field public final sortSubripSubtitles:Z

.field public final splitBweOnRadio:Z

.field public final splitLastSegmentCachekey:Z

.field public final ssAbrAlphaDecay:F

.field public final ssAbrExperimentSetting:Ljava/lang/String;

.field public final ssAbrMinSamples:I

.field public final ssAbrNumSamplesAvg:I

.field public final staleManifestThreshold:I

.field public final staleManifestThresholdToShowInterruptUI:I

.field public final stallCountsToUpdateDynamicRebufferThreshold:I

.field public final stallFromSeekThresholdMs:I

.field public final stopRefreshingManifestNoPlaybackUpdateAfterTimeMs:I

.field public final streamLatencyToggleMaxSpeedDelta:F

.field public final streamLatencyTogglePIDDesiredBufferMs:I

.field public final streamLatencyTogglePIDIntegralBoundMs:I

.field public final streamLatencyToggleSpeedUpBandwidthMultiplier:F

.field public final streamLatencyToggleStateOverride:I

.field public final subtitleDurationToMaxValue:Z

.field public final surfaceControlForceVideoSizeUpdate:Z

.field public final surfaceMPDFailoverImmediately:Z

.field public final swallowSurfaceGlDetachError:Z

.field public final targetBufferBytesFactor:F

.field public final targetBytesForOverwrite:I

.field public final threadSleepMsForDecoderInitFailure:I

.field public final timeBetweenPIDSamplesMs:I

.field public final tslogSettings:LX/AeD;

.field public final unstallBufferSetting:LX/AeO;

.field public final unstallBufferSettingLive:LX/AeO;

.field public final updateConcatMsDuringPlayback:Z

.field public final updateLoadingPriorityExo2:Z

.field public final updateParamOnGetManifestFetcher:Z

.field public final updateUnstallBufferDuringPlayback:Z

.field public final useAccumulatorForBw:Z

.field public final useAdAwareLoadControl:Z

.field public final useAllSettingsToSupportLowerLatency:Z

.field public final useBackgroundHandlerForHeroLiveManager:Z

.field public final useBlockingSetSurfaceExo2:Z

.field public final useBufferBasedAbrPDash:Z

.field public final useBufferedCacheDataSink:Z

.field public final useBwBpsForConnectionQuality:Z

.field public final useCellMaxWaterMarkMsConfig:Z

.field public final useCodecNeedsEosBufferTimestampWorkaround:Z

.field public final useDefaultTrackSelector:Z

.field public final useDummySurfaceExo2:Z

.field public final useExoPlayerBuilder:Z

.field public final useFallbackLogging:Z

.field public final useForceSurfaceChange:Z

.field public final useFullscreenTransitionPrediction:Z

.field public final useHandlerThreadPool:Z

.field public final useHeroBufferSize:Z

.field public final useHttpPriorityIncrementalForLongBufferedStreaming:Z

.field public final useHttpPriorityIncrementalForPrefetch:Z

.field public final useHttpPriorityIncrementalForStreaming:Z

.field public final useHttpPriorityWarmupForLongBufferedStreaming:Z

.field public final useInterruptedIoException:Z

.field public final useIsCachedSkipInit:Z

.field public final useLatencyForSegmentConcat:Z

.field public final useLowPriorityForSecondPhasePrefetch:Z

.field public final useLowerHttpPriorityForAllPrefetch:Z

.field public final useLowerHttpPriorityForUnimportantPrefetch:Z

.field public final useMainThreadForHeroPlayer:Z

.field public final useMaxBufferForProgressive:Z

.field public final useMaxOfLowWatermarkOrPrevHighWaterMarkWhenForced:Z

.field public final useMediaCodecPoolingConcurrentCollections:Z

.field public final useMediaCodecPoolingForCodecByName:Ljava/lang/String;

.field public final useMinIntentBasedWatermarkBeforePlay:Z

.field public final useMultiPeriodBufferCalculation:Z

.field public final useNetworkAwareHttpPriorityIncrementalForStreaming:Z

.field public final useNetworkAwareSettingsForLargerChunk:Z

.field public final useNetworkAwareSettingsForUnstallBuffer:Z

.field public final useNetworkAwaretPrefetchTaskQueueWorkerNum:Z

.field public final useNonInterleavedExtractorForLocal:Z

.field public final useOutputSurfaceWorkaround:Z

.field public final usePerVideoLookupToCheckCache:Z

.field public final usePrefetchFilter:Z

.field public final usePrefetchSegmentOffset:Z

.field public final useSSAbrBWE:Z

.field public final useSSAbrMinRtt:Z

.field public final useShortKey:Z

.field public final useSimpleSpeedController:Z

.field public final useSingleCachedBandwidthEstimate:Z

.field public final useSsBweForVod:Z

.field public final useSteadyStateToControlSpeed:Z

.field public final useThreadSafeStandaloneClock:Z

.field public final useVersion2_18Workarounds:Z

.field public final useVideoSourceAsWarmupKey:Z

.field public final useWAPlayerPoolLoadControl:Z

.field public final useWatermarkEvaluatorForProgressive:Z

.field public final useWifiMaxWaterMarkMsConfig:Z

.field public final userAgent:Ljava/lang/String;

.field public final userId:Ljava/lang/String;

.field public final validateBytesToFallbackOnFirstSegment:Z

.field public final videoBufferSize:I

.field public final videoMemoryCacheSizeKb:I

.field public final videoPrefetchSetting:LX/AeF;

.field public final vp9BlockingReleaseSurface:Z

.field public final vp9PlaybackDecoderName:Ljava/lang/String;

.field public final wakelockOriginLists:Ljava/util/Set;

.field public final warmupAv1Codec:Z

.field public final warmupVp9Codec:Z

.field public final watchTimeThresholdToDisableFollowupPrefetch:F

.field public final watchTimeThresholdToDisableSecondPhasePrefetchSeconds:F

.field public final wifiMaxWatermarkMsConfig:LX/AeG;

.field public final xHEAACCEffectType:I

.field public final xHEAACTargetReferenceLvl:I


# direct methods
.method public static constructor <clinit>()V
    .locals 2

    new-instance v1, LX/9V4;

    invoke-direct {v1}, LX/9V4;-><init>()V

    new-instance v0, LX/AeW;

    invoke-direct {v0, v1}, LX/AeW;-><init>(LX/9V4;)V

    sput-object v0, LX/AeW;->A01:LX/AeW;

    new-instance v1, LX/99c;

    invoke-direct {v1}, LX/99c;-><init>()V

    new-instance v0, Lcom/facebook/video/heroplayer/setting/FbAutogeneratedSettings;

    invoke-direct {v0, v1}, Lcom/facebook/video/heroplayer/setting/FbAutogeneratedSettings;-><init>(LX/99c;)V

    sput-object v0, LX/AeW;->A00:Lcom/facebook/video/heroplayer/setting/FbAutogeneratedSettings;

    return-void
.end method

.method public constructor <init>(LX/9V4;)V
    .locals 3

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v1, 0x0

    iput-boolean v1, p0, LX/AeW;->enableCacheNetworkTypeIfNotSet:Z

    iget-object v0, p1, LX/9V4;->A0O:Lcom/facebook/video/heroplayer/setting/FbAutogeneratedSettings;

    iput-object v0, p0, LX/AeW;->autogenSettings:Lcom/facebook/video/heroplayer/setting/FbAutogeneratedSettings;

    iput-boolean v1, p0, LX/AeW;->improveLooping:Z

    const/4 v0, 0x0

    iput-object v0, p0, LX/AeW;->serviceInjectorClassName:Ljava/lang/String;

    iget v0, p1, LX/9V4;->A07:I

    iput v0, p0, LX/AeW;->playerPoolSize:I

    const/16 v0, 0x7d0

    iput v0, p0, LX/AeW;->releaseSurfaceBlockTimeoutMS:I

    iput-boolean v1, p0, LX/AeW;->skipReleaseSurfaceBlock:Z

    iget-object v0, p1, LX/9V4;->A0V:Ljava/lang/String;

    iput-object v0, p0, LX/AeW;->userAgent:Ljava/lang/String;

    const/4 v0, 0x0

    iput-object v0, p0, LX/AeW;->userId:Ljava/lang/String;

    const/16 v0, 0x14

    iput v0, p0, LX/AeW;->reportStallThresholdMs:I

    iput v0, p0, LX/AeW;->reportStallThresholdMsLatencyManager:I

    const/16 v0, 0xa

    iput v0, p0, LX/AeW;->checkPlayerStateMinIntervalMs:I

    const/16 v0, 0xc8

    iput v0, p0, LX/AeW;->checkPlayerStateMaxIntervalMs:I

    const/4 v0, 0x5

    iput v0, p0, LX/AeW;->checkPlayerStateIntervalIncreaseMs:I

    const/16 v0, 0xfa

    iput v0, p0, LX/AeW;->needUpdatePlayerStateThresholdMs:I

    const/16 v0, 0xa

    iput v0, p0, LX/AeW;->needUpdateStateByPositionOffsetThresholdMs:I

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->enablePauseNow:Z

    iput-boolean v1, p0, LX/AeW;->enableFBLiteHttpDataSource:Z

    iput-boolean v1, p0, LX/AeW;->enableLocalSocketProxy:Z

    const/4 v0, 0x0

    iput-object v0, p0, LX/AeW;->localSocketProxyAddress:Ljava/lang/String;

    iput-boolean v1, p0, LX/AeW;->useNonInterleavedExtractorForLocal:Z

    iput-boolean v1, p0, LX/AeW;->enableIgHttpDataSource:Z

    iput-boolean v1, p0, LX/AeW;->enableCaseInsensitiveHttpResponseHeaderKey:Z

    iput-boolean v1, p0, LX/AeW;->usePrefetchFilter:Z

    iput-boolean v1, p0, LX/AeW;->avoidServiceClassLoadOnClient:Z

    iput-boolean v1, p0, LX/AeW;->vp9BlockingReleaseSurface:Z

    iput-object v0, p0, LX/AeW;->vp9PlaybackDecoderName:Ljava/lang/String;

    iput-boolean v1, p0, LX/AeW;->includeAllBufferingEvents:Z

    iget-object v0, p1, LX/9V4;->A0N:LX/AeI;

    iput-object v0, p0, LX/AeW;->cache:LX/AeI;

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->setPlayWhenReadyOnError:Z

    iput-boolean v0, p0, LX/AeW;->setPlayWhenReadyOnRetry:Z

    const/16 v0, 0x3e8

    iput v0, p0, LX/AeW;->returnRequestedSeekTimeTimeoutMs:I

    const/16 v0, 0x1f4

    iput v0, p0, LX/AeW;->stallFromSeekThresholdMs:I

    iput-boolean v1, p0, LX/AeW;->enablePrefetchCancelCallback:Z

    iget-object v0, p1, LX/9V4;->A0S:LX/AeO;

    iput-object v0, p0, LX/AeW;->unstallBufferSetting:LX/AeO;

    iget-object v0, p1, LX/9V4;->A0T:LX/AeO;

    iput-object v0, p0, LX/AeW;->unstallBufferSettingLive:LX/AeO;

    iput-boolean v1, p0, LX/AeW;->clearBufferingWhenInWarmup:Z

    iget-object v0, p1, LX/9V4;->A0P:LX/AeM;

    iput-object v0, p0, LX/AeW;->intentBasedBufferingConfig:LX/AeM;

    iput-boolean v1, p0, LX/AeW;->releaseSurfaceInServicePlayerReset:Z

    iput-boolean v1, p0, LX/AeW;->respectDynamicPlayerSettings:Z

    iput-boolean v1, p0, LX/AeW;->reportPrefetchAbrDecision:Z

    iget-object v0, p1, LX/9V4;->A0L:LX/BXb;

    iput-object v0, p0, LX/AeW;->abrSetting:LX/BXb;

    iget-object v0, p1, LX/9V4;->A0K:LX/AeV;

    iput-object v0, p0, LX/AeW;->predictiveDashSetting:LX/AeV;

    iput-boolean v1, p0, LX/AeW;->refreshManifestOnPredictionRestriction:Z

    iget-object v0, p1, LX/9V4;->A0J:LX/AeJ;

    iput-object v0, p0, LX/AeW;->dynamicInfoSetting:LX/AeJ;

    const/4 v0, 0x0

    iput-object v0, p0, LX/AeW;->mLowLatencySetting:LX/AeB;

    iput-object v0, p0, LX/AeW;->mEventLogSetting:LX/AeA;

    iget-object v0, p1, LX/9V4;->A0M:LX/AeE;

    iput-object v0, p0, LX/AeW;->audioLazyLoadSetting:LX/AeE;

    iput-boolean v1, p0, LX/AeW;->enableLazyAudioLoadForProgressive:Z

    iget-object v0, p1, LX/9V4;->A0U:LX/AeF;

    iput-object v0, p0, LX/AeW;->videoPrefetchSetting:LX/AeF;

    const/16 v0, 0x3023

    iput v0, p0, LX/AeW;->dashLowWatermarkMs:I

    const/16 v0, 0x3747

    iput v0, p0, LX/AeW;->dashHighWatermarkMs:I

    iput-boolean v1, p0, LX/AeW;->liveEnableStreamingCache:Z

    const-wide/16 v0, 0x7d0

    iput-wide v0, p0, LX/AeW;->minDelayToRefreshTigonBitrateMs:J

    const/4 v0, 0x0

    iput-object v0, p0, LX/AeW;->fetchCacheSourceHttpConnectTimeoutMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->fetchHttpReadTimeoutMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->concatenatedMsPerLoadConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->minBufferMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->minRebufferMsConfig:LX/AeG;

    const/4 v1, 0x0

    iput-boolean v1, p0, LX/AeW;->enableGrootAlwaysSendPlayStarted:Z

    iput-object v0, p0, LX/AeW;->minMicroRebufferMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->liveMinBufferMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->liveMinRebufferMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->liveAPIMinBufferMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->liveAPIMinRebufferMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->livePremiumMinBufferMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->livePremiumMinRebufferMsConfig:LX/AeG;

    iput-boolean v1, p0, LX/AeW;->useLatencyForSegmentConcat:Z

    iget-object v0, p1, LX/9V4;->A0H:LX/AeG;

    iput-object v0, p0, LX/AeW;->latencyBoundMsConfig:LX/AeG;

    const/4 v0, 0x0

    iput-object v0, p0, LX/AeW;->fbstoriesMinBufferMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->fbstoriesMinRebufferMsConfig:LX/AeG;

    iget-object v0, p1, LX/9V4;->A0I:LX/AeG;

    iput-object v0, p0, LX/AeW;->qualityMapperBoundMsConfig:LX/AeG;

    iput-boolean v1, p0, LX/AeW;->enableProgressiveFallbackWhenNoRepresentations:Z

    iput-boolean v1, p0, LX/AeW;->blockDRMPlaybackOnHDMI:Z

    iput-boolean v1, p0, LX/AeW;->blockDRMScreenCapture:Z

    iput-boolean v1, p0, LX/AeW;->fixDRMPlaybackOnHDMI:Z

    iput-boolean v1, p0, LX/AeW;->enableWarmCodec:Z

    const/4 v0, 0x2

    iput v0, p0, LX/AeW;->playerWarmUpPoolSize:I

    const/16 v0, 0x3e8

    iput v0, p0, LX/AeW;->playerWatermarkBeforePlayedMs:I

    iput v0, p0, LX/AeW;->playerWarmUpWatermarkMs:I

    iput-boolean v1, p0, LX/AeW;->allowOverridingPlayerWarmUpWatermark:Z

    iput-boolean v1, p0, LX/AeW;->swallowSurfaceGlDetachError:Z

    iput-boolean v1, p0, LX/AeW;->forceMainThreadHandlerForHeroSurface:Z

    iput-boolean v1, p0, LX/AeW;->enableWarmupScheduler:Z

    iput-boolean v1, p0, LX/AeW;->enableWarmupSkipScheduler:Z

    iput-boolean v1, p0, LX/AeW;->enableWarmupSchedulerRightAway:Z

    const-wide/16 v0, 0x0

    iput-wide v0, p0, LX/AeW;->rendererAllowedJoiningTimeMs:J

    const/4 v1, 0x0

    iput-boolean v1, p0, LX/AeW;->skipPrefetchInCacheManager:Z

    iput-boolean v1, p0, LX/AeW;->useNetworkAwareSettingsForLargerChunk:Z

    iput-boolean v1, p0, LX/AeW;->enableDebugLogs:Z

    iput-boolean v1, p0, LX/AeW;->skipDebugLogs:Z

    iput-boolean v1, p0, LX/AeW;->showDebugStats:Z

    iput-boolean v1, p0, LX/AeW;->isAbrTracingEnabled:Z

    iget-boolean v0, p1, LX/9V4;->A0f:Z

    iput-boolean v0, p0, LX/AeW;->dummyDefaultSetting:Z

    iput-boolean v1, p0, LX/AeW;->enableCachedBandwidthEstimate:Z

    iput-boolean v1, p0, LX/AeW;->useSingleCachedBandwidthEstimate:Z

    iput-boolean v1, p0, LX/AeW;->disableTigonBandwidthLogging:Z

    iput-boolean v1, p0, LX/AeW;->shouldLogInbandTelemetryBweDebugString:Z

    iput-boolean v1, p0, LX/AeW;->killVideoProcessWhenMainProcessDead:Z

    iput-boolean v1, p0, LX/AeW;->isLiveTraceEnabled:Z

    iput-boolean v1, p0, LX/AeW;->isTATracingEnabled:Z

    iput-boolean v1, p0, LX/AeW;->releaseGrootSurfaceSync:Z

    iput-boolean v1, p0, LX/AeW;->asyncReleaseSurfaceOnMainThread:Z

    iput-boolean v1, p0, LX/AeW;->preventTextRendererDelay:Z

    iput-boolean v1, p0, LX/AeW;->fixPeriodTransitionWithNonZeroStartPosition:Z

    iput-boolean v1, p0, LX/AeW;->abrMonitorEnabled:Z

    const/16 v0, 0x3e8

    iput v0, p0, LX/AeW;->maxNumGapsToNotify:I

    iput-boolean v1, p0, LX/AeW;->enableMediaCodecPoolingForVodVideo:Z

    iput-boolean v1, p0, LX/AeW;->enableMediaCodecPoolingForVodAudio:Z

    iput-boolean v1, p0, LX/AeW;->enableMediaCodecPoolingForLiveVideo:Z

    iput-boolean v1, p0, LX/AeW;->enableMediaCodecPoolingForLiveAudio:Z

    iput-boolean v1, p0, LX/AeW;->enableMediaCodecPoolingForProgressiveVideo:Z

    iput-boolean v1, p0, LX/AeW;->enableMediaCodecPoolingForProgressiveAudio:Z

    iput-boolean v1, p0, LX/AeW;->enableMediaCodecReuseOptimizeLock:Z

    iput-boolean v1, p0, LX/AeW;->enableMediaCodecReuseOptimizeRelease:Z

    iput-boolean v1, p0, LX/AeW;->useMediaCodecPoolingConcurrentCollections:Z

    const/4 v0, 0x0

    iput-object v0, p0, LX/AeW;->useMediaCodecPoolingForCodecByName:Ljava/lang/String;

    iput-boolean v1, p0, LX/AeW;->useVersion2_18Workarounds:Z

    iput-boolean v1, p0, LX/AeW;->useCodecNeedsEosBufferTimestampWorkaround:Z

    const/16 v0, 0x3e8

    iput v0, p0, LX/AeW;->releaseThreadInterval:I

    const/4 v0, 0x2

    iput v0, p0, LX/AeW;->maxMediaCodecInstancesPerCodecName:I

    const/4 v0, 0x4

    iput v0, p0, LX/AeW;->maxMediaCodecInstancesTotal:I

    iput-boolean v1, p0, LX/AeW;->enableAlwaysCallPreallocateCodec:Z

    iput-boolean v1, p0, LX/AeW;->isEarlyPreallocateCodec:Z

    iput-boolean v1, p0, LX/AeW;->earlyPreallocateCodecOnAppNotScrolling:Z

    iput-boolean v1, p0, LX/AeW;->earlyPreallocateCodecOnIdle:Z

    iput-boolean v1, p0, LX/AeW;->disablePreallocateCodecDuringStartup:Z

    iput-boolean v1, p0, LX/AeW;->useNetworkAwareSettingsForUnstallBuffer:Z

    iput-boolean v1, p0, LX/AeW;->disableStoriesCustomizedUnstallBuffer:Z

    iput-boolean v1, p0, LX/AeW;->bgHeroServiceStatusUpdate:Z

    iput-boolean v1, p0, LX/AeW;->isExo2UseAbsolutePosition:Z

    iput-boolean v1, p0, LX/AeW;->shouldExcludeAbsolutePositionForClippingMediaSource:Z

    iput-boolean v1, p0, LX/AeW;->isExo2MediaCodecReuseEnabled:Z

    iput-boolean v1, p0, LX/AeW;->useBlockingSetSurfaceExo2:Z

    iput-boolean v1, p0, LX/AeW;->isExo2AggresiveMicrostallFixEnabled:Z

    iput-boolean v1, p0, LX/AeW;->warmupVp9Codec:Z

    iput-boolean v1, p0, LX/AeW;->warmupAv1Codec:Z

    iget-boolean v0, p1, LX/9V4;->A0i:Z

    iput-boolean v0, p0, LX/AeW;->playerRespawnExo2:Z

    iput-boolean v1, p0, LX/AeW;->updateLoadingPriorityExo2:Z

    iput-boolean v1, p0, LX/AeW;->checkReadToEndBeforeUpdatingFinalState:Z

    iput-boolean v1, p0, LX/AeW;->isExo2Vp9Enabled:Z

    iput-boolean v1, p0, LX/AeW;->exo2Vp9UseSurfaceRenderer:Z

    iput-boolean v1, p0, LX/AeW;->skipEvaluateIflastChunkWasInitialization:Z

    iput-boolean v1, p0, LX/AeW;->logOnApacheFallback:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->enableSystrace:Z

    iput-boolean v1, p0, LX/AeW;->isDefaultMC:Z

    const-string v0, "unset"

    iput-object v0, p0, LX/AeW;->mcDebugState:Ljava/lang/String;

    iput-object v0, p0, LX/AeW;->mcValueSource:Ljava/lang/String;

    iput-boolean v1, p0, LX/AeW;->enableCodecPreallocation:Z

    iput-boolean v1, p0, LX/AeW;->enableVp9CodecPreallocation:Z

    iput-boolean v1, p0, LX/AeW;->preventPreallocateIfNotEmpty:Z

    iput-boolean v1, p0, LX/AeW;->enableRequestEtdHeader:Z

    iput-boolean v1, p0, LX/AeW;->reportLastVideoInCrash:Z

    const-wide/16 v0, 0x0

    iput-wide v0, p0, LX/AeW;->maxDurationUsForFullSegmentPrefetch:J

    const/4 v1, 0x0

    iput-boolean v1, p0, LX/AeW;->isSetSerializableBlacklisted:Z

    iput-boolean v1, p0, LX/AeW;->useWatermarkEvaluatorForProgressive:Z

    iput-boolean v1, p0, LX/AeW;->useMaxBufferForProgressive:Z

    iget-boolean v0, p1, LX/9V4;->A0n:Z

    iput-boolean v0, p0, LX/AeW;->useDummySurfaceExo2:Z

    iput-boolean v1, p0, LX/AeW;->useVideoSourceAsWarmupKey:Z

    const-wide/32 v0, 0x5b8d80

    iput-wide v0, p0, LX/AeW;->maxBufferDurationPausedLiveUs:J

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableUsingASRCaptions:Z

    iput-boolean v0, p0, LX/AeW;->enableBitrateAwareAudioPrefetch:Z

    iput-boolean v0, p0, LX/AeW;->proxyDrmProvisioningRequests:Z

    iput-boolean v0, p0, LX/AeW;->liveUseLowPriRequests:Z

    const/16 v0, 0xfa0

    iput v0, p0, LX/AeW;->liveDashEdgeLatencyMs:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->logLatencyEvents:Z

    iput-boolean v0, p0, LX/AeW;->disableLatencyManagerOnStaticManifest:Z

    iput-boolean v0, p0, LX/AeW;->enablePreSeekToApi:Z

    iput-boolean v0, p0, LX/AeW;->continuouslyLoadFromPreSeekLocation:Z

    const-wide v0, 0x7fffffffffffffffL

    iput-wide v0, p0, LX/AeW;->minBufferForPreSeekMs:J

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->audioVideoSyncPeriodMs:I

    iput-boolean v0, p0, LX/AeW;->enableProgressivePrefetchWhenNoRepresentations:Z

    iput-boolean v0, p0, LX/AeW;->continueLoadingOnSeekbarExo2:Z

    iput-boolean v0, p0, LX/AeW;->subtitleDurationToMaxValue:Z

    iput-boolean v0, p0, LX/AeW;->isExo2DrmEnabled:Z

    iput-boolean v0, p0, LX/AeW;->enableDrmProvisioningRetry:Z

    iput-boolean v0, p0, LX/AeW;->sortSubripSubtitles:Z

    iput-boolean v0, p0, LX/AeW;->logStallOnPauseOnError:Z

    iput-boolean v0, p0, LX/AeW;->skipSynchronizedUpdatePriority:Z

    iput-boolean v0, p0, LX/AeW;->exo2ReuseManifestAfterInitialParse:Z

    iput-boolean v0, p0, LX/AeW;->enableFrameBasedLogging:Z

    const/16 v0, 0x64

    iput v0, p0, LX/AeW;->prefetchTaskQueueSize:I

    const/4 v0, 0x1

    iput v0, p0, LX/AeW;->prefetchTaskQueueWorkerNum:I

    const/4 v0, 0x2

    iput v0, p0, LX/AeW;->prefetchUrgentTaskQueueWorkerNum:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->usePrefetchSegmentOffset:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->refreshManifestAfterInit:Z

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->disableAudioFocusInGroot:Z

    iput-boolean v0, p0, LX/AeW;->offloadGrootAudioFocus:Z

    iput-boolean v0, p0, LX/AeW;->enableDeduplicateImfEmsgAtPlayer:Z

    const/16 v0, 0xfa0

    iput v0, p0, LX/AeW;->numMsToPrefetch:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableWifiLongerPrefetchAds:Z

    iput-boolean v0, p0, LX/AeW;->enableAllLongerPrefetchAds:Z

    const/4 v0, -0x1

    iput v0, p0, LX/AeW;->maxWifiPrefetchDurationMsAds:I

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->adBreakEnahncedPrefetchDurationMs:I

    iput-boolean v0, p0, LX/AeW;->enableAdBreakEnhancedPrefetch:Z

    const/high16 v0, 0x100000

    iput v0, p0, LX/AeW;->maxWifiBytesToPrefetchAds:I

    const/4 v0, -0x1

    iput v0, p0, LX/AeW;->minLiveStartPositionMs:I

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->stopRefreshingManifestNoPlaybackUpdateAfterTimeMs:I

    const/16 v0, 0x2ee0

    iput v0, p0, LX/AeW;->liveDashHighWatermarkMs:I

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->liveDashLowWatermarkMs:I

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->prefetchTaskQueuePutInFront:Z

    iput v0, p0, LX/AeW;->prefetchTaskQueueRetryNumber:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableCancelOngoingRequestPause:Z

    iput-boolean v0, p0, LX/AeW;->shouldPrefetchSecondSegmentOffset:Z

    iput-boolean v0, p0, LX/AeW;->fallbackToFirstSegment:Z

    iput-boolean v0, p0, LX/AeW;->enableSegmentIndexCheckForPrefetchBytes:Z

    iput-boolean v0, p0, LX/AeW;->validateBytesToFallbackOnFirstSegment:Z

    const-string v2, ""

    iput-object v2, p0, LX/AeW;->prefetchTagBlockList:Ljava/lang/String;

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->enabledViewManagementInGroot:Z

    const/high16 v0, 0x20000

    iput v0, p0, LX/AeW;->maxBytesToPrefetchVOD:I

    const/high16 v0, 0x10000

    iput v0, p0, LX/AeW;->maxBytesToPrefetchCellVOD:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableLiveOneTimeLoadingJump:Z

    iput-boolean v0, p0, LX/AeW;->enableSpatialOpusRendererExo2:Z

    iput-boolean v0, p0, LX/AeW;->manifestErrorReportingExo2:Z

    iput-boolean v0, p0, LX/AeW;->manifestMisalignmentReportingExo2:Z

    iput-boolean v0, p0, LX/AeW;->enableVideoHybridCache:Z

    iput-boolean v0, p0, LX/AeW;->enableHybridCacheForPrefetch:Z

    iput-boolean v0, p0, LX/AeW;->enableVideoMemoryCache:Z

    const v0, 0x18aa0

    iput v0, p0, LX/AeW;->videoMemoryCacheSizeKb:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->alwaysPerformContentLengthUpdateFirst:Z

    iput-boolean v0, p0, LX/AeW;->enableUpdateProgressiveContentLengthFromCache:Z

    iput-boolean v0, p0, LX/AeW;->enableLongCacheKeyForContentLength:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->updateParamOnGetManifestFetcher:Z

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->prefetchBypassFilter:Z

    iput-boolean v0, p0, LX/AeW;->useBufferBasedAbrPDash:Z

    const/4 v0, 0x5

    iput v0, p0, LX/AeW;->minimumLogLevel:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->isMeDevice:Z

    iput-boolean v0, p0, LX/AeW;->enableOffloadingIPC:Z

    iput-boolean v0, p0, LX/AeW;->pausePlayingVideoWhenRelease:Z

    iput-boolean v0, p0, LX/AeW;->enableAv1Dav1d:Z

    iput-boolean v0, p0, LX/AeW;->enableAv1LibGav1:Z

    iput-boolean v0, p0, LX/AeW;->prioritizeAv1HardwareDecoder:Z

    iget-object v0, p1, LX/9V4;->A0W:Ljava/util/HashMap;

    iput-object v0, p0, LX/AeW;->blockListedHardwareDecoderMap:Ljava/util/HashMap;

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->prioritizeAv1Dav1dOverLibgav1:Z

    iput v0, p0, LX/AeW;->dav1dThreads:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->handleReleasedReusedSurfaceTexture:Z

    const/4 v0, 0x1

    iput v0, p0, LX/AeW;->dav1dMaxFrameDelay:I

    iput-boolean v0, p0, LX/AeW;->dav1dApplyGrain:Z

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->av1SetBuffersDataspace:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->av1UseMemoryCleanupFixes:Z

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->av1UseDav1dSynchronizationFixes:Z

    iput-boolean v0, p0, LX/AeW;->av1FlushDav1dProperly:Z

    iput-boolean v0, p0, LX/AeW;->useForceSurfaceChange:Z

    iput-boolean v0, p0, LX/AeW;->parseAndAttachETagManifest:Z

    iput-boolean v0, p0, LX/AeW;->enableSecondPhasePrefetch:Z

    iput-boolean v0, p0, LX/AeW;->disableSecondPhasePrefetchForReels:Z

    iput-boolean v0, p0, LX/AeW;->disableSecondPhasePrefetchForDataSaver:Z

    iput-boolean v0, p0, LX/AeW;->enableSecondPhasePrefetchWebm:Z

    iput-boolean v0, p0, LX/AeW;->disableSecondPhasePrefetchOnAppScrolling:Z

    iput-boolean v0, p0, LX/AeW;->enableSecondPhaseAlignment:Z

    iput v0, p0, LX/AeW;->secondPhasePrefetchQueueMaxSize:I

    iput v0, p0, LX/AeW;->numSegmentsToSecondPhasePrefetch:I

    iput v0, p0, LX/AeW;->numSegmentsToSecondPhasePrefetchAudio:I

    iput v0, p0, LX/AeW;->numSegmentsToSecondPhasePrefetchXHEAACAudio:I

    iput-boolean v0, p0, LX/AeW;->enableLogSemiCachedEvents:Z

    iput-boolean v0, p0, LX/AeW;->enableCacheBlockWithoutTimeout:Z

    iput-boolean v0, p0, LX/AeW;->enableLogExceptionMessageOnError:Z

    iput-boolean v0, p0, LX/AeW;->reportExceptionsAsSoftErrors:Z

    iput-boolean v0, p0, LX/AeW;->reportExceptionAsMME:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->checkCachedLockedCacheSpan:Z

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->prefetchAudioFirst:Z

    iput-boolean v0, p0, LX/AeW;->cancelOngoingRequest:Z

    iput-boolean v0, p0, LX/AeW;->enableCancelPrefetchInQueuePrepare:Z

    iput-boolean v0, p0, LX/AeW;->enableBoostOngoingPrefetchPriorityPrepare:Z

    iput-boolean v0, p0, LX/AeW;->enableBoostOngoingPrefetchPriorityPlay:Z

    iput-boolean v0, p0, LX/AeW;->enableDemoteOngoingPrefetchPriorityPause:Z

    iput-boolean v0, p0, LX/AeW;->enableCancelOngoingPrefetchPause:Z

    iput-boolean v0, p0, LX/AeW;->enableCancelFollowupPrefetch:Z

    iput-boolean v0, p0, LX/AeW;->prefetchAudioFirstForStoriesAds:Z

    iput-boolean v0, p0, LX/AeW;->skipAudioPrefetch:Z

    iput-boolean v0, p0, LX/AeW;->allowOutOfBoundsAccessForPDash:Z

    iput v0, p0, LX/AeW;->minNumManifestForOutOfBoundsPDash:I

    iput-boolean v0, p0, LX/AeW;->enableNeedCenteringIndependentlyGroot:Z

    iput-boolean v0, p0, LX/AeW;->av1ThrowExceptionOnPictureError:Z

    iput-boolean v0, p0, LX/AeW;->av1ThrowExceptionOnNonDav1dDecoder:Z

    iget-wide v0, p1, LX/9V4;->A0G:J

    iput-wide v0, p0, LX/AeW;->ignoreStreamErrorsTimeoutMs:J

    const-wide/16 v0, 0x0

    iput-wide v0, p0, LX/AeW;->ignoreLiveStreamErrorsTimeoutMs:J

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->callbackFirstCaughtStreamError:Z

    iput-boolean v0, p0, LX/AeW;->avoidSecondPhaseOnCell:Z

    iput-boolean v0, p0, LX/AeW;->includeLiveTraceHeader:Z

    iput-boolean v0, p0, LX/AeW;->alwaysReuseManifestFetcher:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->av1Dav1dEnableVpsLogging:Z

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->av1Dav1dUseSurfaceViewSetFix:Z

    iput-boolean v0, p0, LX/AeW;->skipSurfaceViewReparentOnSetCurrentView:Z

    iput-boolean v0, p0, LX/AeW;->skipSurfaceViewTransactionOnSameSurface:Z

    iput-boolean v0, p0, LX/AeW;->allowMultiPlayerFormatWarmup:Z

    iput-boolean v0, p0, LX/AeW;->reorderSeekPrepare:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->prioritizeTimeOverSizeThresholds:Z

    iput-boolean v0, p0, LX/AeW;->livePrioritizeTimeOverSizeThresholds:Z

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->disableCapBufferSizeLocalProgressive:Z

    iput-boolean v0, p0, LX/AeW;->useHeroBufferSize:Z

    iput v0, p0, LX/AeW;->videoBufferSize:I

    iput v0, p0, LX/AeW;->audioBufferSize:I

    iput-boolean v0, p0, LX/AeW;->enableMemoryAwareBufferSizeUsingRed:Z

    iput-boolean v0, p0, LX/AeW;->enableMemoryAwareBufferSizeUsingYellow:Z

    const-wide/high16 v0, 0x3ff0000000000000L    # 1.0

    iput-wide v0, p0, LX/AeW;->redMemoryBufferSizeMultiplier:D

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->useAccumulatorForBw:Z

    iput-boolean v0, p0, LX/AeW;->parseManifestIdentifier:Z

    iput-boolean v0, p0, LX/AeW;->enableCDNDebugHeaders:Z

    const/4 v0, -0x1

    iput v0, p0, LX/AeW;->maxTimeMsSinceRefreshPDash:I

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->predictionMaxSegmentDurationMs:I

    const/16 v0, 0x2134

    iput v0, p0, LX/AeW;->predictiveDashReadTimeoutMs:I

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->segDurationMultiplier:I

    const/16 v0, 0x1f40

    iput v0, p0, LX/AeW;->predictedHuddleDashManifestReadTimeoutMs:I

    iput v0, p0, LX/AeW;->predictedLiveDashManifestReadTimeoutMs:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableServerSideAbr:Z

    iput-boolean v0, p0, LX/AeW;->enableServerSideForwardBwe:Z

    iput-boolean v0, p0, LX/AeW;->useSSAbrBWE:Z

    iput-boolean v0, p0, LX/AeW;->useSSAbrMinRtt:Z

    iput-boolean v0, p0, LX/AeW;->useSsBweForVod:Z

    iput-boolean v0, p0, LX/AeW;->enableSsBweHeaderForLive:Z

    iput-boolean v0, p0, LX/AeW;->shareBWEEstimateAcrossVideos:Z

    iput-boolean v0, p0, LX/AeW;->splitBweOnRadio:Z

    const v0, 0x7a120

    iput v0, p0, LX/AeW;->progressivePrefetchBytesWifi:I

    const v0, 0x3e800

    iput v0, p0, LX/AeW;->progressivePrefetchBytesCell:I

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->maxSegmentsToPredict:I

    iput-boolean v0, p0, LX/AeW;->getMinLoadPositionStartOfPlayback:Z

    const v0, 0x3f4ccccd    # 0.8f

    iput v0, p0, LX/AeW;->largeJumpBandwidthMultiplier:F

    const/high16 v0, 0x3f800000    # 1.0f

    iput v0, p0, LX/AeW;->smallJumpBandwidthMultiplier:F

    const/16 v0, 0x7d0

    iput v0, p0, LX/AeW;->highJumpDistanceMs:I

    const/16 v0, 0x1f40

    iput v0, p0, LX/AeW;->lowJumpDistanceMs:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableDynamicDiscontinuityDistance:Z

    const/16 v0, 0xfa0

    iput v0, p0, LX/AeW;->dynamicDiscontinuityInitialPosMs:I

    const/4 v0, 0x3

    iput v0, p0, LX/AeW;->maxStaleManifestCountForDiscontinuityJumps:I

    const/16 v0, 0x7d0

    iput v0, p0, LX/AeW;->minTimeBetweenDynamicCursorChangesMs:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableDynamicCursorDistance:Z

    const/16 v0, 0x7d0

    iput v0, p0, LX/AeW;->largeBandwidthCursorMs:I

    const/16 v0, 0xfa0

    iput v0, p0, LX/AeW;->smallBandwidthCursorMs:I

    const/16 v0, 0x1770

    iput v0, p0, LX/AeW;->largeBandwidthToleranceMs:I

    iput v0, p0, LX/AeW;->smallBandwidthToleranceMs:I

    const/16 v0, 0x3c

    iput v0, p0, LX/AeW;->minimumTimeBetweenStallsS:I

    const/16 v0, 0x1e

    iput v0, p0, LX/AeW;->minimumTimeBetweenSpeedChangesS:I

    const/4 v0, 0x5

    iput v0, p0, LX/AeW;->minTimeBetweenStallToIgnoreDiscontJumpS:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->ignoreTemplatedMinLoadPosition:Z

    iput-boolean v0, p0, LX/AeW;->preventJumpStaticManifest:Z

    iput-boolean v0, p0, LX/AeW;->maybeSkipInlineManifestForLSB:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->disableSkipInlineForHuddle:Z

    const/16 v0, 0x4b

    iput v0, p0, LX/AeW;->skipInlineManifestForLsbConfPercentile:I

    const/high16 v0, 0x3f800000    # 1.0f

    iput v0, p0, LX/AeW;->bandwidthMultiplierToSkipPrefetchedContent:F

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->maxTimeToSkipInlineManifestMs:I

    iput v0, p0, LX/AeW;->minTimeToSkipInlineManifestMs:I

    const-wide/16 v0, 0x0

    iput-wide v0, p0, LX/AeW;->aggressiveEdgeLatencyOverrideForLSB:J

    const/16 v0, 0x4b

    iput v0, p0, LX/AeW;->aggressiveEdgeLatencyForLsbConfPercentile:I

    const/high16 v0, 0x3f000000    # 0.5f

    iput v0, p0, LX/AeW;->bandwidthMultiplierForAggressiveEdgeLatency:F

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableLatencyPlaybackSpeed:Z

    iput-boolean v0, p0, LX/AeW;->useSimpleSpeedController:Z

    iput-boolean v0, p0, LX/AeW;->useSteadyStateToControlSpeed:Z

    const v0, 0x3f866666    # 1.05f

    iput v0, p0, LX/AeW;->expBackOffSpeedUp:F

    const/high16 v0, -0x40800000    # -1.0f

    iput v0, p0, LX/AeW;->watchTimeThresholdToDisableFollowupPrefetch:F

    const/high16 v0, 0x3f000000    # 0.5f

    iput v0, p0, LX/AeW;->pidMultiplierFloor:F

    const v0, 0x3f99999a    # 1.2f

    iput v0, p0, LX/AeW;->pidParameterMultiplierInitial:F

    const v0, 0x3f733333    # 0.95f

    iput v0, p0, LX/AeW;->pidParameterExpBackOff:F

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableLiveLatencyManager:Z

    iput-boolean v0, p0, LX/AeW;->enableLiveJumpByTrimBuffer:Z

    iput-boolean v0, p0, LX/AeW;->enableLatencyManagerRateLimiting:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->forceSeekRushPlayback:Z

    iput-object v2, p0, LX/AeW;->liveLatencyManagerPlayerFormat:Ljava/lang/String;

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableLiveBufferMeter:Z

    iput-boolean v0, p0, LX/AeW;->enableLiveBWEstimation:Z

    const/16 v0, 0x3e8

    iput v0, p0, LX/AeW;->liveTrimByBufferMeterMinDeltaMs:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableAvc1ColorConfigParseFix:Z

    const/16 v0, 0x14

    iput v0, p0, LX/AeW;->liveBufferDurationFluctuationTolerancePercent:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->liveBufferMeterTrimByMinBuffer:Z

    iput-boolean v0, p0, LX/AeW;->enableSuspensionAfterBroadcasterStall:Z

    iput-boolean v0, p0, LX/AeW;->allowImmediateLiveBufferTrim:Z

    const/16 v0, 0x1388

    iput v0, p0, LX/AeW;->initialBufferTrimPeriodMs:I

    const/16 v0, 0x1770

    iput v0, p0, LX/AeW;->initialBufferTrimThresholdMs:I

    const/16 v0, 0xfa0

    iput v0, p0, LX/AeW;->initialBufferTrimTargetMs:I

    iput v0, p0, LX/AeW;->extendedLiveRebufferThresholdMs:I

    iput v0, p0, LX/AeW;->allowedExtendedRebufferPeriodMs:I

    const/16 v0, 0x7530

    iput v0, p0, LX/AeW;->frequentBroadcasterStallIntervalThresholdMs:I

    const/16 v0, 0x1770

    iput v0, p0, LX/AeW;->extendedPremiumTierLiveRebufferThresholdMs:I

    const/16 v0, 0x2710

    iput v0, p0, LX/AeW;->allowedExtendedPremiumTierRebufferPeriodMs:I

    const v0, 0xea60

    iput v0, p0, LX/AeW;->frequentPremiumTierBroadcasterStallIntervalThresholdMs:I

    const/16 v0, 0x1770

    iput v0, p0, LX/AeW;->extendedApiTierLiveRebufferThresholdMs:I

    const v0, 0xea60

    iput v0, p0, LX/AeW;->frequentApiTierBroadcasterStallIntervalThresholdMs:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableLiveTierSpecificRebuffer:Z

    iput-boolean v0, p0, LX/AeW;->enableMP3Extractor:Z

    iput-boolean v0, p0, LX/AeW;->enableMp3Mp4ExtractorLogic:Z

    const/4 v0, -0x1

    iput v0, p0, LX/AeW;->maxNumRedirects:I

    const-string v0, "FB4A/Facebook"

    iput-object v0, p0, LX/AeW;->defaultUserAgent:Ljava/lang/String;

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->splitLastSegmentCachekey:Z

    iput-boolean v0, p0, LX/AeW;->enableEmsgPtsAlignment:Z

    const/4 v0, 0x1

    iput v0, p0, LX/AeW;->fragmentedMp4ExtractorVersion:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enablePlayerActionStateLoggingInFlytrap:Z

    iput-boolean v0, p0, LX/AeW;->enableWarmUpRequestOffscreen:Z

    iput-boolean v0, p0, LX/AeW;->enableFirstWarmUpRequestOnScreen:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->newDownstreamFormatChange:Z

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->microStallThresholdMsToUseMinBuffer:I

    iput-boolean v0, p0, LX/AeW;->updateUnstallBufferDuringPlayback:Z

    iput-boolean v0, p0, LX/AeW;->updateConcatMsDuringPlayback:Z

    iput-boolean v0, p0, LX/AeW;->enableVodDrmPrefetch:Z

    iput-boolean v0, p0, LX/AeW;->enableActiveDrmSessionStoreRelease:Z

    const/4 v0, 0x3

    iput v0, p0, LX/AeW;->drmSessionStoreCapacity:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableCustomizedXHEAACConfig:Z

    iput-boolean v0, p0, LX/AeW;->enableSeamlessAudioCodecAdaptation:Z

    iput-boolean v0, p0, LX/AeW;->enableCustomizedDRCEffect:Z

    iput-boolean v0, p0, LX/AeW;->enableCustomizedDRCForHeadset:Z

    const/16 v0, 0x12

    iput v0, p0, LX/AeW;->lateNightHourLowerThreshold:I

    const/4 v0, 0x6

    iput v0, p0, LX/AeW;->lateNightHourUpperThreshold:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableAsynchronousBufferQueueing:Z

    iput-boolean v0, p0, LX/AeW;->enableSynchronizeCodecInteractionsWithQueueing:Z

    iput-boolean v0, p0, LX/AeW;->enableLowLatencyDecoding:Z

    iput-boolean v0, p0, LX/AeW;->enableLowLatencyDecodingOverrideSDKGating:Z

    const/16 v0, 0x40

    iput v0, p0, LX/AeW;->xHEAACTargetReferenceLvl:I

    const/4 v0, 0x3

    iput v0, p0, LX/AeW;->xHEAACCEffectType:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->useBwBpsForConnectionQuality:Z

    iput-boolean v0, p0, LX/AeW;->preventWarmupInvalidSource:Z

    iput-boolean v0, p0, LX/AeW;->reportUnexpectedStopLoading:Z

    iput-boolean v0, p0, LX/AeW;->enableReduceRetryBeforePlay:Z

    const/4 v0, 0x1

    iput v0, p0, LX/AeW;->minRetryCountBeforePlay:I

    const/4 v1, 0x0

    iput-boolean v1, p0, LX/AeW;->forceMinWatermarkGreaterThanMinRebuffer:Z

    iput-boolean v1, p0, LX/AeW;->bypassGreaterThanMinRebufferWhenBeforePlay:Z

    iput-boolean v1, p0, LX/AeW;->useMaxOfLowWatermarkOrPrevHighWaterMarkWhenForced:Z

    iput-boolean v1, p0, LX/AeW;->useWifiMaxWaterMarkMsConfig:Z

    iput-boolean v1, p0, LX/AeW;->useCellMaxWaterMarkMsConfig:Z

    iput-boolean v1, p0, LX/AeW;->useNetworkAwaretPrefetchTaskQueueWorkerNum:Z

    const/4 v0, 0x0

    iput-object v0, p0, LX/AeW;->wifiMaxWatermarkMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->cellMaxWatermarkMsConfig:LX/AeG;

    iput-object v0, p0, LX/AeW;->networkAwareDisableSecondPhasePrefetch:LX/AeG;

    iput-object v0, p0, LX/AeW;->networkAwarePrefetchTaskQueueWorkerNum:LX/AeG;

    iput-object v0, p0, LX/AeW;->networkAwareHttpPriorityIncrementalForStreaming:LX/AeG;

    iput-boolean v1, p0, LX/AeW;->skipInvalidSamples:Z

    iput v1, p0, LX/AeW;->minBufferedDurationMsToCancel:I

    iput v1, p0, LX/AeW;->decoderInitializationRetryTimeMs:I

    iput v1, p0, LX/AeW;->decoderDequeueRetryTimeMs:I

    iput v1, p0, LX/AeW;->renderRetryTimeMs:I

    iput-boolean v1, p0, LX/AeW;->disableRecoverInBackground:Z

    iput-boolean v1, p0, LX/AeW;->enableEnsureBindService:Z

    iput-boolean v1, p0, LX/AeW;->enableFallbackToMainProcess:Z

    iput-boolean v1, p0, LX/AeW;->enableKillProcessBeforeRebind:Z

    iput v1, p0, LX/AeW;->restartServiceThresholdMs:I

    iput-boolean v1, p0, LX/AeW;->fixSurfaceInvisibleParent:Z

    iput v1, p0, LX/AeW;->depthTocheckSurfaceInvisibleParent:I

    iput-boolean v1, p0, LX/AeW;->isAudioDataSummaryEnabled:Z

    iput-boolean v1, p0, LX/AeW;->enableBlackscreenDetector:Z

    const-wide/16 v0, 0x7d0

    iput-wide v0, p0, LX/AeW;->blackscreenSampleIntervalMs:J

    const-wide/16 v0, 0x3e8

    iput-wide v0, p0, LX/AeW;->blackscreenNoSampleThresholdMs:J

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->blackscreenDetectOnce:Z

    iput-boolean v0, p0, LX/AeW;->fixBlackscreenByRecreatingSurface:Z

    iput-boolean v0, p0, LX/AeW;->removeGifPrefixForDRMKeyRequest:Z

    iput-boolean v0, p0, LX/AeW;->enableDrmSessionStore:Z

    iput-boolean v0, p0, LX/AeW;->skipMediaCodecStopOnRelease:Z

    iget-object v0, p1, LX/9V4;->A0b:Ljava/util/Set;

    iput-object v0, p0, LX/AeW;->softErrorErrorDomainBlacklist:Ljava/util/Set;

    iget-object v0, p1, LX/9V4;->A0a:Ljava/util/Set;

    iput-object v0, p0, LX/AeW;->softErrorErrorCodeBlacklist:Ljava/util/Set;

    iget-object v0, p1, LX/9V4;->A0c:Ljava/util/Set;

    iput-object v0, p0, LX/AeW;->softErrorErrorMessageBlacklist:Ljava/util/Set;

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->logPausedSeekPositionBeforeSettingState:Z

    iput-boolean v0, p0, LX/AeW;->enableRetryWarmup:Z

    const/16 v0, 0x64

    iput v0, p0, LX/AeW;->initChunkCacheSize:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->skipAudioMediaCodecStopOnRelease:Z

    iput-boolean v0, p0, LX/AeW;->enableCodecDeadlockFix:Z

    iget v0, p1, LX/9V4;->A04:I

    iput v0, p0, LX/AeW;->frequentStallIntervalThresholdMs:I

    iget v0, p1, LX/9V4;->A0D:I

    iput v0, p0, LX/AeW;->stallCountsToUpdateDynamicRebufferThreshold:I

    iget v0, p1, LX/9V4;->A03:I

    iput v0, p0, LX/AeW;->extendedMinRebufferThresholdMs:I

    const/16 v0, 0xfa0

    iput v0, p0, LX/AeW;->allowedExtendedMinRebuffePeriodMs:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->fixXmlParserError:Z

    const/4 v0, -0x1

    iput v0, p0, LX/AeW;->globalStallCountsToUpdateDynamicRebuffer:I

    iput v0, p0, LX/AeW;->globalStallCountsToUpdateLiveDynamicRebuffer:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableEvictPlayerOnAudioTrackInitFailed:Z

    iput-boolean v0, p0, LX/AeW;->enableCheckAudioError:Z

    const/4 v0, 0x3

    iput v0, p0, LX/AeW;->maxRetryCountByEvictPlayerOnAudioTrackInitFailed:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableEvictCacheOnExoplayerErrors:Z

    const/4 v0, 0x1

    iput v0, p0, LX/AeW;->maxRetryCountByEvictCacheOnExoplayerErrors:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->disableAudioRendererOnAudioTrackInitFailed:Z

    const/4 v0, 0x3

    iput v0, p0, LX/AeW;->audioTrackInitFailedFallbackApplyThreshold:I

    const-wide/32 v0, 0x493e0

    iput-wide v0, p0, LX/AeW;->killVideoProcessOnExoPlaybackExceptionRetryTimeMs:J

    const/4 v0, 0x3

    iput v0, p0, LX/AeW;->killVideoProcessOnExoPlaybackExceptionMaximumRetryCount:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableKillVideoProcessForAudioTrackInitFailed:Z

    iput-boolean v0, p0, LX/AeW;->enableKillVideoProcessForIllegalStateException:Z

    iput-boolean v0, p0, LX/AeW;->enableRebootDeviceErrorUIForAudioTrackInitFailed:Z

    iput-boolean v0, p0, LX/AeW;->enableRebootDeviceErrorUIForCodecInitFailed:Z

    iput-boolean v0, p0, LX/AeW;->enableRebootDeviceErrorUIForIllegalStateException:Z

    iput-boolean v0, p0, LX/AeW;->useThreadSafeStandaloneClock:Z

    iput-boolean v0, p0, LX/AeW;->useMultiPeriodBufferCalculation:Z

    iput-boolean v0, p0, LX/AeW;->isVideoQplPipelineEnabled:Z

    iput-boolean v0, p0, LX/AeW;->disableIsCachedApi:Z

    iput-boolean v0, p0, LX/AeW;->enableLoadErrorHandlingPolicy:Z

    iput-boolean v0, p0, LX/AeW;->enableBlockListingResource:Z

    iput-boolean v0, p0, LX/AeW;->enable500R1FallbackLogging:Z

    iput-boolean v0, p0, LX/AeW;->checkManifestRepresentationFormatMismatch:Z

    iput-boolean v0, p0, LX/AeW;->checkLiveSourceUri:Z

    iput-object v2, p0, LX/AeW;->oneSemanticsOsParamValue:Ljava/lang/String;

    iput-boolean v0, p0, LX/AeW;->forceOneSemanticsHandling:Z

    iput v0, p0, LX/AeW;->forceOneSemanticsWaveHandling:I

    iput v0, p0, LX/AeW;->expBackoffInRetryBaseDelay:I

    iput-boolean v0, p0, LX/AeW;->shouldLoadBinaryDataFromManifest:Z

    iput-boolean v0, p0, LX/AeW;->enhanceParseException:Z

    iput-boolean v0, p0, LX/AeW;->smartGcEnabled:Z

    iput v0, p0, LX/AeW;->smartGcTimeout:I

    iput-boolean v0, p0, LX/AeW;->getPlaybackPrefFromPrefetchRequest:Z

    iput-boolean v0, p0, LX/AeW;->useShortKey:Z

    const/4 v0, 0x3

    iput v0, p0, LX/AeW;->staleManifestThreshold:I

    iput v0, p0, LX/AeW;->staleManifestThresholdToShowInterruptUI:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->checkThumbnailCache:Z

    iput-boolean v0, p0, LX/AeW;->ignore404AfterStreamEnd:Z

    iput-boolean v0, p0, LX/AeW;->allowPredictiveAlignment:Z

    iput-boolean v0, p0, LX/AeW;->enableUnifiedGrootErrorHandling:Z

    iput v0, p0, LX/AeW;->minScoreThresholdForLL:I

    iput v0, p0, LX/AeW;->goodVsrScoreThreshold:I

    iput v0, p0, LX/AeW;->maxTrackJumpsAllowed:I

    const/4 v0, -0x1

    iput v0, p0, LX/AeW;->maxDistanceBetweenTracksMs:I

    iput v0, p0, LX/AeW;->maxPastOtherTrackDistanceMs:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableVideoDebugEventLogging:Z

    iput-boolean v0, p0, LX/AeW;->respectDroppedQualityFlag:Z

    iput-object v2, p0, LX/AeW;->ssAbrExperimentSetting:Ljava/lang/String;

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->ssAbrAlphaDecay:F

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->ssAbrNumSamplesAvg:I

    iput v0, p0, LX/AeW;->ssAbrMinSamples:I

    iput-boolean v0, p0, LX/AeW;->enableJumpTrackFallingBehind:Z

    iput-boolean v0, p0, LX/AeW;->enable404SegmentRemapping:Z

    iput-boolean v0, p0, LX/AeW;->enableOneSemanticsLoaderRetry:Z

    iput-boolean v0, p0, LX/AeW;->enable204SegmentRemapping:Z

    const/4 v0, 0x3

    iput v0, p0, LX/AeW;->maxPredictedSegmentsToRemap:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->skipThumbnailCacheKey:Z

    iput-boolean v0, p0, LX/AeW;->enableCreateByteBufferFromABufferNullCheckHooks:Z

    iput-boolean v0, p0, LX/AeW;->enableBusySignalToFramework:Z

    iput-boolean v0, p0, LX/AeW;->shouldWarmupAwareOfAppScrolling:Z

    iput-boolean v0, p0, LX/AeW;->shouldUseWarmupSlot:Z

    iput-boolean v0, p0, LX/AeW;->enableDelayWarmupRunning:Z

    const/16 v0, 0x3e8

    iput v0, p0, LX/AeW;->delayWarmupRunningMs:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableWarmupProcessPeriodically:Z

    iput-boolean v0, p0, LX/AeW;->enableStopWarmupSchedulerEmpty:Z

    iput-boolean v0, p0, LX/AeW;->enableFillBufferHooks:Z

    iput-boolean v0, p0, LX/AeW;->enableFreeNodeHooks:Z

    iput-boolean v0, p0, LX/AeW;->enableOnMessageReceivedHooks:Z

    iput-boolean v0, p0, LX/AeW;->enableSendCommandHooks:Z

    iput-boolean v0, p0, LX/AeW;->enableOnOMXEmptyBufferDoneHooks:Z

    iput-boolean v0, p0, LX/AeW;->enableFillFreeBufferCheckNodeHooks:Z

    iput-boolean v0, p0, LX/AeW;->enableFixRemovePlayerViewFromParent:Z

    iput-boolean v0, p0, LX/AeW;->latencyControllerBypassLimits:Z

    const/high16 v0, 0x3f800000    # 1.0f

    iput v0, p0, LX/AeW;->targetBufferBytesFactor:F

    const/4 v1, 0x0

    iput-boolean v1, p0, LX/AeW;->enableOverrideBufferWatermark:Z

    iput-boolean v1, p0, LX/AeW;->enableOverrideEndPosition:Z

    iget-object v0, p1, LX/9V4;->A0Q:LX/AeH;

    iput-object v0, p0, LX/AeW;->loggerSDKConfig:LX/AeH;

    iput-boolean v1, p0, LX/AeW;->enableMp4MultiTrafBoxesFix:Z

    const/4 v0, 0x5

    iput v0, p0, LX/AeW;->chunkSourceRetryMaximum:I

    iget-object v0, p1, LX/9V4;->A0X:Ljava/util/Map;

    iput-object v0, p0, LX/AeW;->liveLatencySettings:Ljava/util/Map;

    iput-boolean v1, p0, LX/AeW;->forceDisableULL:Z

    iput v1, p0, LX/AeW;->bufferDecreaseTimeMs:I

    iput v1, p0, LX/AeW;->scalingBufferErrorMs:I

    const/16 v0, 0xc8

    iput v0, p0, LX/AeW;->timeBetweenPIDSamplesMs:I

    iput v0, p0, LX/AeW;->adjustSpeedBottomThresholdMs:I

    const/16 v0, 0x32

    iput v0, p0, LX/AeW;->desiredBufferAcceptableErrorMs:I

    iput-boolean v1, p0, LX/AeW;->disableSpeedAdjustmentOnBadUserExperience:Z

    const/16 v0, 0x12c

    iput v0, p0, LX/AeW;->adjustSpeedTopThresholdMs:I

    iput-boolean v1, p0, LX/AeW;->enableRetryErrorLoggingInCancel:Z

    iput-boolean v1, p0, LX/AeW;->enableRetryOnConnection:Z

    iput-boolean v1, p0, LX/AeW;->enableLoaderRetryLoggingForManifest:Z

    iput-boolean v1, p0, LX/AeW;->enableLoaderRetryLoggingForMedia:Z

    iput-boolean v1, p0, LX/AeW;->enableContinueLoadingLoggingForManifest:Z

    iput-boolean v1, p0, LX/AeW;->enableContinueLoadingLoggingForMedia:Z

    iput-boolean v1, p0, LX/AeW;->disableLoadingRetryOnFatalError:Z

    const/4 v0, 0x1

    iput v0, p0, LX/AeW;->errorRecoveryAttemptRepeatCountFlushThreshold:I

    iput-boolean v1, p0, LX/AeW;->disableNetworkErrorCountInChunkSource:Z

    iput-boolean v1, p0, LX/AeW;->ignoreEmptyProfileLevels:Z

    iput-boolean v1, p0, LX/AeW;->exceedRendererCapabilitiesIfAllFilteredOut:Z

    iput-boolean v1, p0, LX/AeW;->alwaysPrefetchInBgDefaultPriorityThread:Z

    iput-boolean v1, p0, LX/AeW;->alwaysPrefetchInIdleExecutor:Z

    iput-boolean v1, p0, LX/AeW;->enableCustomizedPrefetchThreadPriority:Z

    iput v1, p0, LX/AeW;->customizedPrefetchThreadPriority:I

    iput-boolean v0, p0, LX/AeW;->postStoriesGrootPrefetchToHeroManagerThread:Z

    iput-boolean v0, p0, LX/AeW;->cleanUpHeartbeatMessagesIfNotPlaying:Z

    iput-boolean v0, p0, LX/AeW;->cleanUpHeartbeatMessagesOnStall:Z

    iput-boolean v0, p0, LX/AeW;->cleanUpHeartbeatMessagesOnPause:Z

    iget-boolean v0, p1, LX/9V4;->A0g:Z

    iput-boolean v0, p0, LX/AeW;->enableDynamicMinRebufferMsController:Z

    iput-boolean v1, p0, LX/AeW;->enableGlobalStallMonitor:Z

    iput-boolean v1, p0, LX/AeW;->enableGlobalNetworkMonitor:Z

    iput-boolean v1, p0, LX/AeW;->enableLiveTierSpecificBufferSetting:Z

    const/4 v0, -0x1

    iput v0, p0, LX/AeW;->liveMinRetryCounts:I

    const/4 v0, 0x5

    iput v0, p0, LX/AeW;->prefetchThreadUpdatedPriority:I

    iput-boolean v1, p0, LX/AeW;->changeThreadPriorityForPrefetch:Z

    const/4 v0, -0x1

    iput v0, p0, LX/AeW;->numOfBytesBeforeLoaderThreadSleep:I

    iput-boolean v1, p0, LX/AeW;->enableLiveBroadcastErrorUI:Z

    iput-boolean v1, p0, LX/AeW;->enableFixTrackIndexOOB:Z

    iput-boolean v1, p0, LX/AeW;->shouldAlwaysDo503Retry:Z

    iput v0, p0, LX/AeW;->retryCountsForStartPlayManifestFetch:I

    iput v0, p0, LX/AeW;->retryCountsForStartPlayManifest503:I

    iput-boolean v1, p0, LX/AeW;->enableHttpPriorityForPrefetch:Z

    iput-boolean v1, p0, LX/AeW;->enableHttpPriorityForStreaming:Z

    iput-boolean v1, p0, LX/AeW;->useHttpPriorityIncrementalForStreaming:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->useHttpPriorityIncrementalForPrefetch:Z

    iput-boolean v0, p0, LX/AeW;->useHttpPriorityIncrementalForLongBufferedStreaming:Z

    iput-boolean v1, p0, LX/AeW;->useHttpPriorityWarmupForLongBufferedStreaming:Z

    iput-boolean v1, p0, LX/AeW;->useNetworkAwareHttpPriorityIncrementalForStreaming:Z

    iput-boolean v1, p0, LX/AeW;->useLowPriorityForSecondPhasePrefetch:Z

    iput v1, p0, LX/AeW;->bufferedDurationBasedHttpPriorityUpperBoundMs:I

    iput v1, p0, LX/AeW;->bufferedDurationBasedHttpPriorityLowerBoundMs:I

    const/high16 v0, -0x40800000    # -1.0f

    iput v0, p0, LX/AeW;->watchTimeThresholdToDisableSecondPhasePrefetchSeconds:F

    iput-boolean v1, p0, LX/AeW;->changePriorityForPrefetchRequestOnPlayerStart:Z

    iput-boolean v1, p0, LX/AeW;->useLowerHttpPriorityForUnimportantPrefetch:Z

    iput-boolean v1, p0, LX/AeW;->useLowerHttpPriorityForAllPrefetch:Z

    iput-boolean v1, p0, LX/AeW;->useOutputSurfaceWorkaround:Z

    iput-boolean v1, p0, LX/AeW;->enableBufferAwareJumpSeek:Z

    iput v1, p0, LX/AeW;->jumpSeekPosLeftoverBufferDurationMs:I

    iput v1, p0, LX/AeW;->jumpSeekReductionFactorPct:I

    iput-boolean v1, p0, LX/AeW;->enableBackwardJumpSeekKeyframeSync:Z

    iput v1, p0, LX/AeW;->seekParameterOptionIndex:I

    iput-boolean v1, p0, LX/AeW;->skipAV1PreviousKeyFrameSeek:Z

    iput-boolean v1, p0, LX/AeW;->enableCacheLookUp:Z

    iput-boolean v1, p0, LX/AeW;->usePerVideoLookupToCheckCache:Z

    iput-boolean v1, p0, LX/AeW;->useIsCachedSkipInit:Z

    iput-boolean v1, p0, LX/AeW;->releaseHeroManagerWhenLowMemInBg:Z

    iput-boolean v1, p0, LX/AeW;->useAdAwareLoadControl:Z

    const v0, 0x3e99999a    # 0.3f

    iput v0, p0, LX/AeW;->huddleLatencyMaxSpeedDelta:F

    iput-boolean v1, p0, LX/AeW;->enablePIDForHuddle:Z

    iput-boolean v1, p0, LX/AeW;->forceStereoToMonoConversion:Z

    iput-boolean v1, p0, LX/AeW;->enableQuickDashPlayback:Z

    iput-boolean v1, p0, LX/AeW;->enableClockSync:Z

    iput-boolean v1, p0, LX/AeW;->enableStreamLatencyToggleOverride:Z

    iput v1, p0, LX/AeW;->streamLatencyToggleStateOverride:I

    const/16 v0, 0xbb8

    iput v0, p0, LX/AeW;->streamLatencyTogglePIDDesiredBufferMs:I

    const v0, 0x1d4c0

    iput v0, p0, LX/AeW;->streamLatencyTogglePIDIntegralBoundMs:I

    const v0, 0x3e99999a    # 0.3f

    iput v0, p0, LX/AeW;->streamLatencyToggleMaxSpeedDelta:F

    const/high16 v0, 0x40000000    # 2.0f

    iput v0, p0, LX/AeW;->streamLatencyToggleSpeedUpBandwidthMultiplier:F

    iput-boolean v1, p0, LX/AeW;->includePlaybackSessionIdHeader:Z

    iput-boolean v1, p0, LX/AeW;->enableE2ECDNTracing:Z

    iput-boolean v1, p0, LX/AeW;->enablePredictedUrlTracing:Z

    iput-object v2, p0, LX/AeW;->broadcasterIdAllowlist:Ljava/lang/String;

    iput-object v2, p0, LX/AeW;->playerOriginPausedLoadingBlackList:Ljava/lang/String;

    iget-object v0, p1, LX/9V4;->A0Z:Ljava/util/Set;

    iput-object v0, p0, LX/AeW;->pausedLoadingTriggerTypes:Ljava/util/Set;

    iget-object v0, p1, LX/9V4;->A0Y:Ljava/util/Set;

    iput-object v0, p0, LX/AeW;->originAllowlistForAlternateCodec:Ljava/util/Set;

    iget-object v0, p1, LX/9V4;->A0d:Ljava/util/Set;

    iput-object v0, p0, LX/AeW;->wakelockOriginLists:Ljava/util/Set;

    iput-boolean v1, p0, LX/AeW;->enableExcessiveNumUriRedirectLogging:Z

    iput v1, p0, LX/AeW;->excessiveUriRedirectLoggingLimit:I

    iput-boolean v1, p0, LX/AeW;->enableVodPausedLoading:Z

    iput v1, p0, LX/AeW;->maxBufferToDownloadInPausedLoadingMs:I

    iput v1, p0, LX/AeW;->maxTimeAllowedSpentInPausedLoadingMs:I

    iput-boolean v1, p0, LX/AeW;->enableLastPlaybackSpeedCacheUpdate:Z

    iput-boolean v1, p0, LX/AeW;->enableIsTextAdaptationSetNotFoundLogging:Z

    iput-boolean v1, p0, LX/AeW;->enableOffloadInitHeroService:Z

    iput-boolean v1, p0, LX/AeW;->enableBackgroundServicePlayerReuse:Z

    iput-boolean v1, p0, LX/AeW;->useMinIntentBasedWatermarkBeforePlay:Z

    iput-boolean v1, p0, LX/AeW;->enableMediaSessionControls:Z

    iput-boolean v1, p0, LX/AeW;->enableRequestAnalyticsTagsHeaderLogging:Z

    iput-boolean v1, p0, LX/AeW;->disableTextRendererOn404LoadError:Z

    iput-boolean v1, p0, LX/AeW;->useFallbackLogging:Z

    iput-boolean v1, p0, LX/AeW;->disableTextRendererOn404InitSegmentLoadError:Z

    iput-boolean v1, p0, LX/AeW;->disableTextRendererOn500LoadError:Z

    iput-boolean v1, p0, LX/AeW;->disableTextRendererOn500InitSegmentLoadError:Z

    iput-boolean v1, p0, LX/AeW;->enableVideoPlayerServerSideBweAnnotations:Z

    iput-boolean v1, p0, LX/AeW;->enableUnexpectedExoExceptionLogging:Z

    iput-boolean v1, p0, LX/AeW;->enableEmsgTrackForAll:Z

    iput-boolean v1, p0, LX/AeW;->enableInstreamAdsEmsgLog:Z

    iput v1, p0, LX/AeW;->audioStallCountThresholdMs:I

    iput-boolean v1, p0, LX/AeW;->enableVideoPositionLoggingInCompleteEvent:Z

    iput-boolean v1, p0, LX/AeW;->surfaceMPDFailoverImmediately:Z

    iput-boolean v1, p0, LX/AeW;->disableTextTrackOnMissingTextTrack:Z

    iput-boolean v1, p0, LX/AeW;->enableTextTrackWithKnownLanguage:Z

    iput v1, p0, LX/AeW;->numDashChunkMemoryCacheSampleStreams:I

    iput-boolean v1, p0, LX/AeW;->disableTextEraLoggingOnLoadRetry:Z

    iget-object v0, p1, LX/9V4;->A0R:LX/AeD;

    iput-object v0, p0, LX/AeW;->tslogSettings:LX/AeD;

    iput-boolean v1, p0, LX/AeW;->dontRetry403OnExpiredUrl:Z

    iput-boolean v1, p0, LX/AeW;->useFullscreenTransitionPrediction:Z

    const-wide/16 v0, 0x7d0

    iput-wide v0, p0, LX/AeW;->fullscreenPredictionRequestTimeoutMs:J

    const/4 v0, -0x1

    iput v0, p0, LX/AeW;->maxAllowed503RetryCount:I

    const-wide/16 v0, 0x0

    iput-wide v0, p0, LX/AeW;->advanceSegmentOnNetworkErrors:J

    iput-wide v0, p0, LX/AeW;->maxSegmentsToAdvance:J

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableExplicitTextDataSourceCreation:Z

    iput-boolean v0, p0, LX/AeW;->disableLiveCaptioningOnPlayerInit:Z

    iput-boolean v0, p0, LX/AeW;->enableVrlQplLoggingEvents:Z

    iput-boolean v0, p0, LX/AeW;->reduceMemoryDataSinkMemorySpike:Z

    iput-boolean v0, p0, LX/AeW;->useExoPlayerBuilder:Z

    iput-boolean v0, p0, LX/AeW;->exoPlayerUpgrade218verifyApplicationThread:Z

    iput-boolean v0, p0, LX/AeW;->enable416Logging:Z

    iput-boolean v0, p0, LX/AeW;->enableVodContentLengthLogging:Z

    iput-boolean v0, p0, LX/AeW;->enableServerSideForwardTracing:Z

    iput-boolean v0, p0, LX/AeW;->enableMixedCodecManifestSupport:Z

    iput-boolean v0, p0, LX/AeW;->respectAbrForUll:Z

    iput-boolean v0, p0, LX/AeW;->respectAbrIndexForUll:Z

    iput-boolean v0, p0, LX/AeW;->disableUllBasedOnHoldout:Z

    iput-boolean v0, p0, LX/AeW;->enableWifiLockManager:Z

    iput-boolean v0, p0, LX/AeW;->enableClearStallOnBroadcastEnd:Z

    iput-boolean v0, p0, LX/AeW;->enableSecondaryChannelLoggingForLite:Z

    iput-boolean v0, p0, LX/AeW;->enableDav1dAsMediaCodecAdapter:Z

    iput-boolean v0, p0, LX/AeW;->enableDav1dOpenGLRendering:Z

    iput v0, p0, LX/AeW;->secondaryChannelLoggingMaxNumOfFramesInOneJson:I

    iput v0, p0, LX/AeW;->secondaryChannelLoggingMaxDisplayedFramesStringSize:I

    iput v0, p0, LX/AeW;->secondaryChannelLoggingSamplingFactor:I

    iput-boolean v0, p0, LX/AeW;->surfaceControlForceVideoSizeUpdate:Z

    iput-boolean v0, p0, LX/AeW;->forceAdjustSurfaceOnMainThread:Z

    iput-boolean v0, p0, LX/AeW;->disableVideoTrackForInVisibleVDD:Z

    iput-boolean v0, p0, LX/AeW;->shouldDisableAV1VideoTrackOnlyforVDD:Z

    iput-boolean v0, p0, LX/AeW;->useInterruptedIoException:Z

    iput-boolean v0, p0, LX/AeW;->enableMixeCodecManifestLogging:Z

    iput-boolean v0, p0, LX/AeW;->enableMixeCodecManifestVideoCodecSwitchedLogging:Z

    iput-boolean v0, p0, LX/AeW;->enablePCMBufferListener:Z

    iput-boolean v0, p0, LX/AeW;->enableLoggingEmptyOrNullVideoId:Z

    iput-boolean v0, p0, LX/AeW;->enableDav1dOpenGLIncorrectSurfaceSizeFix:Z

    iput-boolean v0, p0, LX/AeW;->useBufferedCacheDataSink:Z

    iput-boolean v0, p0, LX/AeW;->useHandlerThreadPool:Z

    iget-boolean v0, p1, LX/9V4;->A0o:Z

    iput-boolean v0, p0, LX/AeW;->useMainThreadForHeroPlayer:Z

    const/4 v0, 0x4

    iput v0, p0, LX/AeW;->handlerThreadPoolSize:I

    const/4 v0, 0x0

    iput v0, p0, LX/AeW;->bufferedCacheDataSinkSize:I

    iput-boolean v0, p0, LX/AeW;->enableAV1SRShader:Z

    const/16 v0, 0x3e8

    iput v0, p0, LX/AeW;->maxWidthForAV1SRShader:I

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableSaturation:Z

    const/high16 v0, 0x3f800000    # 1.0f

    iput v0, p0, LX/AeW;->saturationFactor:F

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableAdditionalDecoderInitFailureMessage:Z

    iput-boolean v0, p0, LX/AeW;->enableFixForOnPreparingCallback:Z

    iput-boolean v0, p0, LX/AeW;->enableOpenGLSurfaceSizeUpdateFix:Z

    iput-object v2, p0, LX/AeW;->prefetchSubOriginBlockList:Ljava/lang/String;

    iput-boolean v0, p0, LX/AeW;->enforceSizeLimitOnSecondPhasePrefetch:Z

    iput-boolean v0, p0, LX/AeW;->attachGrootPlayerListenerWhenUsingSurfaceControl:Z

    iput-boolean v0, p0, LX/AeW;->resizeAndRepositionGrootSurfaceControl:Z

    iput-boolean v0, p0, LX/AeW;->preventAdjustWhenSurfaceNotValid:Z

    iput v0, p0, LX/AeW;->forceManifestFilteringMode:I

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->enableDav1dOpenGLRenderingHandleAspectRatio:Z

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableMpdFilteringUtils:Z

    iput-boolean v0, p0, LX/AeW;->enableTransferListenerCallbackPerfFix:Z

    iput-boolean v0, p0, LX/AeW;->enableDynamicPrefetchCacheFileSize:Z

    iput-boolean v0, p0, LX/AeW;->enableDynamicPrefetchCacheFileSizePrefetchOnly:Z

    const-wide/16 v0, 0x0

    iput-wide v0, p0, LX/AeW;->minCacheFileSizeForDynamicChunkingInBytes:J

    const/4 v0, 0x0

    iput-boolean v0, p0, LX/AeW;->enableDashManifestPool:Z

    iput v0, p0, LX/AeW;->dashManifestPoolSize:I

    iput-boolean v0, p0, LX/AeW;->disablePoolingForDav1dMediaCodec:Z

    iput-boolean v0, p0, LX/AeW;->useBackgroundHandlerForHeroLiveManager:Z

    iput-boolean v0, p0, LX/AeW;->useAllSettingsToSupportLowerLatency:Z

    iput-boolean v0, p0, LX/AeW;->combineInitFirstSegment:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, LX/AeW;->fixNullCacheSpan:Z

    const/4 v1, 0x0

    iput-boolean v1, p0, LX/AeW;->enableAudioTrackRetry:Z

    iput v1, p0, LX/AeW;->playbackAboutToFinishCallbackTriggeringRemainingDuration:I

    iget-boolean v0, p1, LX/9V4;->A0k:Z

    iput-boolean v0, p0, LX/AeW;->shouldAddDefaultMP4Extractor:Z

    iget-boolean v0, p1, LX/9V4;->A0j:Z

    iput-boolean v0, p0, LX/AeW;->quitHandlerSafely:Z

    iget-boolean v0, p1, LX/9V4;->A0l:Z

    iput-boolean v0, p0, LX/AeW;->shouldCleanupHeroManagerThread:Z

    iput-boolean v1, p0, LX/AeW;->enableCodecHistoryOverlayField:Z

    iput-boolean v1, p0, LX/AeW;->appendReconfigurationDataForDrmContentFix:Z

    iget v0, p1, LX/9V4;->A0C:I

    iput v0, p0, LX/AeW;->sdkVersionToUseDefaultLoadControl:I

    iget v0, p1, LX/9V4;->A0B:I

    iput v0, p0, LX/AeW;->sdkVersionToUseConservativeLoadControl:I

    iget v0, p1, LX/9V4;->A08:I

    iput v0, p0, LX/AeW;->sdKVersionToUseCustomizedBuffering:I

    iget v0, p1, LX/9V4;->A09:I

    iput v0, p0, LX/AeW;->sdKVersionToUseTargetBufferOverwrite:I

    iget v0, p1, LX/9V4;->A06:I

    iput v0, p0, LX/AeW;->minCustomizedWABufferMs:I

    iget v0, p1, LX/9V4;->A0E:I

    iput v0, p0, LX/AeW;->targetBytesForOverwrite:I

    iget v0, p1, LX/9V4;->A05:I

    iput v0, p0, LX/AeW;->maxCustomizedWABufferMs:I

    iget v0, p1, LX/9V4;->A00:I

    iput v0, p0, LX/AeW;->customizedWABufferForPlaybackMs:I

    iget v0, p1, LX/9V4;->A02:I

    iput v0, p0, LX/AeW;->customizedWARebufferMs:I

    iget v0, p1, LX/9V4;->A01:I

    iput v0, p0, LX/AeW;->customizedWAIndividualAllocationSize:I

    iget-boolean v0, p1, LX/9V4;->A0h:Z

    iput-boolean v0, p0, LX/AeW;->enableHeroPlayerMaxLoopCount:Z

    iget-boolean v0, p1, LX/9V4;->A0e:Z

    iput-boolean v0, p0, LX/AeW;->allowRequestForSoftwareDecoder:Z

    iget-boolean v0, p1, LX/9V4;->A0m:Z

    iput-boolean v0, p0, LX/AeW;->useDefaultTrackSelector:Z

    iget v0, p1, LX/9V4;->A0A:I

    iput v0, p0, LX/AeW;->sdkVersionToBypassHeroStateRefresh:I

    iget-boolean v0, p1, LX/9V4;->A0p:Z

    iput-boolean v0, p0, LX/AeW;->useWAPlayerPoolLoadControl:Z

    iget v0, p1, LX/9V4;->A0F:I

    iput v0, p0, LX/AeW;->threadSleepMsForDecoderInitFailure:I

    return-void
.end method
